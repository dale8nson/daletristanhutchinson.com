{"version":3,"file":"component---src-pages-index-js-924c0d39a92131670c4c.js","mappings":"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","sources":["webpack://dale-tristan-hutchinson/./node_modules/debounce/index.js","webpack://dale-tristan-hutchinson/./node_modules/react-use-measure/dist/web.js","webpack://dale-tristan-hutchinson/./node_modules/its-fine/dist/index.js","webpack://dale-tristan-hutchinson/./node_modules/@react-three/fiber/dist/react-three-fiber.esm.js","webpack://dale-tristan-hutchinson/./node_modules/camera-controls/dist/camera-controls.module.js","webpack://dale-tristan-hutchinson/./node_modules/@react-three/drei/core/CameraControls.js","webpack://dale-tristan-hutchinson/./src/pages/index.js"],"sourcesContent":["/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","import { useState, useRef, useEffect, useMemo } from 'react';\nimport createDebounce from 'debounce';\n\nfunction useMeasure(_temp) {\n  let {\n    debounce,\n    scroll,\n    polyfill,\n    offsetSize\n  } = _temp === void 0 ? {\n    debounce: 0,\n    scroll: false,\n    offsetSize: false\n  } : _temp;\n  const ResizeObserver = polyfill || (typeof window === 'undefined' ? class ResizeObserver {} : window.ResizeObserver);\n\n  if (!ResizeObserver) {\n    throw new Error('This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills');\n  }\n\n  const [bounds, set] = useState({\n    left: 0,\n    top: 0,\n    width: 0,\n    height: 0,\n    bottom: 0,\n    right: 0,\n    x: 0,\n    y: 0\n  }); // keep all state in a ref\n\n  const state = useRef({\n    element: null,\n    scrollContainers: null,\n    resizeObserver: null,\n    lastBounds: bounds\n  }); // set actual debounce values early, so effects know if they should react accordingly\n\n  const scrollDebounce = debounce ? typeof debounce === 'number' ? debounce : debounce.scroll : null;\n  const resizeDebounce = debounce ? typeof debounce === 'number' ? debounce : debounce.resize : null; // make sure to update state only as long as the component is truly mounted\n\n  const mounted = useRef(false);\n  useEffect(() => {\n    mounted.current = true;\n    return () => void (mounted.current = false);\n  }); // memoize handlers, so event-listeners know when they should update\n\n  const [forceRefresh, resizeChange, scrollChange] = useMemo(() => {\n    const callback = () => {\n      if (!state.current.element) return;\n      const {\n        left,\n        top,\n        width,\n        height,\n        bottom,\n        right,\n        x,\n        y\n      } = state.current.element.getBoundingClientRect();\n      const size = {\n        left,\n        top,\n        width,\n        height,\n        bottom,\n        right,\n        x,\n        y\n      };\n\n      if (state.current.element instanceof HTMLElement && offsetSize) {\n        size.height = state.current.element.offsetHeight;\n        size.width = state.current.element.offsetWidth;\n      }\n\n      Object.freeze(size);\n      if (mounted.current && !areBoundsEqual(state.current.lastBounds, size)) set(state.current.lastBounds = size);\n    };\n\n    return [callback, resizeDebounce ? createDebounce(callback, resizeDebounce) : callback, scrollDebounce ? createDebounce(callback, scrollDebounce) : callback];\n  }, [set, offsetSize, scrollDebounce, resizeDebounce]); // cleanup current scroll-listeners / observers\n\n  function removeListeners() {\n    if (state.current.scrollContainers) {\n      state.current.scrollContainers.forEach(element => element.removeEventListener('scroll', scrollChange, true));\n      state.current.scrollContainers = null;\n    }\n\n    if (state.current.resizeObserver) {\n      state.current.resizeObserver.disconnect();\n      state.current.resizeObserver = null;\n    }\n  } // add scroll-listeners / observers\n\n\n  function addListeners() {\n    if (!state.current.element) return;\n    state.current.resizeObserver = new ResizeObserver(scrollChange);\n    state.current.resizeObserver.observe(state.current.element);\n\n    if (scroll && state.current.scrollContainers) {\n      state.current.scrollContainers.forEach(scrollContainer => scrollContainer.addEventListener('scroll', scrollChange, {\n        capture: true,\n        passive: true\n      }));\n    }\n  } // the ref we expose to the user\n\n\n  const ref = node => {\n    if (!node || node === state.current.element) return;\n    removeListeners();\n    state.current.element = node;\n    state.current.scrollContainers = findScrollContainers(node);\n    addListeners();\n  }; // add general event listeners\n\n\n  useOnWindowScroll(scrollChange, Boolean(scroll));\n  useOnWindowResize(resizeChange); // respond to changes that are relevant for the listeners\n\n  useEffect(() => {\n    removeListeners();\n    addListeners();\n  }, [scroll, scrollChange, resizeChange]); // remove all listeners when the components unmounts\n\n  useEffect(() => removeListeners, []);\n  return [ref, bounds, forceRefresh];\n} // Adds native resize listener to window\n\n\nfunction useOnWindowResize(onWindowResize) {\n  useEffect(() => {\n    const cb = onWindowResize;\n    window.addEventListener('resize', cb);\n    return () => void window.removeEventListener('resize', cb);\n  }, [onWindowResize]);\n}\n\nfunction useOnWindowScroll(onScroll, enabled) {\n  useEffect(() => {\n    if (enabled) {\n      const cb = onScroll;\n      window.addEventListener('scroll', cb, {\n        capture: true,\n        passive: true\n      });\n      return () => void window.removeEventListener('scroll', cb, true);\n    }\n  }, [onScroll, enabled]);\n} // Returns a list of scroll offsets\n\n\nfunction findScrollContainers(element) {\n  const result = [];\n  if (!element || element === document.body) return result;\n  const {\n    overflow,\n    overflowX,\n    overflowY\n  } = window.getComputedStyle(element);\n  if ([overflow, overflowX, overflowY].some(prop => prop === 'auto' || prop === 'scroll')) result.push(element);\n  return [...result, ...findScrollContainers(element.parentElement)];\n} // Checks if element boundaries are equal\n\n\nconst keys = ['x', 'y', 'top', 'bottom', 'left', 'right', 'width', 'height'];\n\nconst areBoundsEqual = (a, b) => keys.every(key => a[key] === b[key]);\n\nexport { useMeasure as default };\n","import * as React from \"react\";\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nfunction traverseFiber(fiber, ascending, selector) {\n  if (!fiber)\n    return;\n  if (selector(fiber) === true)\n    return fiber;\n  let child = ascending ? fiber.return : fiber.child;\n  while (child) {\n    const match = traverseFiber(child, ascending, selector);\n    if (match)\n      return match;\n    child = ascending ? null : child.sibling;\n  }\n}\nfunction wrapContext(context) {\n  try {\n    return Object.defineProperties(context, {\n      _currentRenderer: {\n        get() {\n          return null;\n        },\n        set() {\n        }\n      },\n      _currentRenderer2: {\n        get() {\n          return null;\n        },\n        set() {\n        }\n      }\n    });\n  } catch (_) {\n    return context;\n  }\n}\nconst FiberContext = wrapContext(React.createContext(null));\nclass FiberProvider extends React.Component {\n  render() {\n    return /* @__PURE__ */ React.createElement(FiberContext.Provider, {\n      value: this._reactInternals\n    }, this.props.children);\n  }\n}\nconst { ReactCurrentOwner, ReactCurrentDispatcher } = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\nfunction useFiber() {\n  const root = React.useContext(FiberContext);\n  if (root === null)\n    throw new Error(\"its-fine: useFiber must be called within a <FiberProvider />!\");\n  const id = React.useId();\n  const fiber = React.useMemo(() => {\n    for (const maybeFiber of [ReactCurrentOwner == null ? void 0 : ReactCurrentOwner.current, root, root == null ? void 0 : root.alternate]) {\n      if (!maybeFiber)\n        continue;\n      const fiber2 = traverseFiber(maybeFiber, false, (node) => {\n        let state = node.memoizedState;\n        while (state) {\n          if (state.memoizedState === id)\n            return true;\n          state = state.next;\n        }\n      });\n      if (fiber2)\n        return fiber2;\n    }\n  }, [root, id]);\n  return fiber;\n}\nfunction useContainer() {\n  const fiber = useFiber();\n  const root = React.useMemo(\n    () => traverseFiber(fiber, true, (node) => {\n      var _a;\n      return ((_a = node.stateNode) == null ? void 0 : _a.containerInfo) != null;\n    }),\n    [fiber]\n  );\n  return root == null ? void 0 : root.stateNode.containerInfo;\n}\nfunction useNearestChild(type) {\n  const fiber = useFiber();\n  const childRef = React.useRef();\n  React.useLayoutEffect(() => {\n    var _a;\n    childRef.current = (_a = traverseFiber(\n      fiber,\n      false,\n      (node) => typeof node.type === \"string\" && (type === void 0 || node.type === type)\n    )) == null ? void 0 : _a.stateNode;\n  }, [fiber]);\n  return childRef;\n}\nfunction useNearestParent(type) {\n  const fiber = useFiber();\n  const parentRef = React.useRef();\n  React.useLayoutEffect(() => {\n    var _a;\n    parentRef.current = (_a = traverseFiber(\n      fiber,\n      true,\n      (node) => typeof node.type === \"string\" && (type === void 0 || node.type === type)\n    )) == null ? void 0 : _a.stateNode;\n  }, [fiber]);\n  return parentRef;\n}\nfunction useContextMap() {\n  var _a, _b;\n  const fiber = useFiber();\n  const [contextMap] = React.useState(() => /* @__PURE__ */ new Map());\n  contextMap.clear();\n  let node = fiber;\n  while (node) {\n    const context = (_a = node.type) == null ? void 0 : _a._context;\n    if (context && context !== FiberContext && !contextMap.has(context)) {\n      contextMap.set(context, (_b = ReactCurrentDispatcher == null ? void 0 : ReactCurrentDispatcher.current) == null ? void 0 : _b.readContext(wrapContext(context)));\n    }\n    node = node.return;\n  }\n  return contextMap;\n}\nfunction useContextBridge() {\n  const contextMap = useContextMap();\n  return React.useMemo(\n    () => Array.from(contextMap.keys()).reduce(\n      (Prev, context) => (props) => /* @__PURE__ */ React.createElement(Prev, null, /* @__PURE__ */ React.createElement(context.Provider, __spreadProps(__spreadValues({}, props), {\n        value: contextMap.get(context)\n      }))),\n      (props) => /* @__PURE__ */ React.createElement(FiberProvider, __spreadValues({}, props))\n    ),\n    [contextMap]\n  );\n}\nexport {\n  FiberProvider,\n  traverseFiber,\n  useContainer,\n  useContextBridge,\n  useContextMap,\n  useFiber,\n  useNearestChild,\n  useNearestParent\n};\n//# sourceMappingURL=index.js.map\n","import { c as createEvents, e as extend, u as useMutableCallback, a as useIsomorphicLayoutEffect, b as createRoot, i as isRef, E as ErrorBoundary, B as Block, d as unmountComponentAtNode } from './index-27578f8f.esm.js';\nexport { t as ReactThreeFiber, w as _roots, v as act, o as addAfterEffect, n as addEffect, p as addTail, m as advance, j as applyProps, f as context, c as createEvents, g as createPortal, b as createRoot, k as dispose, e as extend, q as flushGlobalEffects, s as getRootState, l as invalidate, h as reconciler, r as render, d as unmountComponentAtNode, A as useFrame, C as useGraph, x as useInstanceHandle, D as useLoader, y as useStore, z as useThree } from './index-27578f8f.esm.js';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport useMeasure from 'react-use-measure';\nimport { FiberProvider, useContextBridge } from 'its-fine';\nimport 'react-reconciler/constants';\nimport 'zustand';\nimport 'react-reconciler';\nimport 'scheduler';\nimport 'suspend-react';\n\nconst DOM_EVENTS = {\n  onClick: ['click', false],\n  onContextMenu: ['contextmenu', false],\n  onDoubleClick: ['dblclick', false],\n  onWheel: ['wheel', true],\n  onPointerDown: ['pointerdown', true],\n  onPointerUp: ['pointerup', true],\n  onPointerLeave: ['pointerleave', true],\n  onPointerMove: ['pointermove', true],\n  onPointerCancel: ['pointercancel', true],\n  onLostPointerCapture: ['lostpointercapture', true]\n};\n\n/** Default R3F event manager for web */\nfunction createPointerEvents(store) {\n  const {\n    handlePointer\n  } = createEvents(store);\n  return {\n    priority: 1,\n    enabled: true,\n    compute(event, state, previous) {\n      // https://github.com/pmndrs/react-three-fiber/pull/782\n      // Events trigger outside of canvas when moved, use offsetX/Y by default and allow overrides\n      state.pointer.set(event.offsetX / state.size.width * 2 - 1, -(event.offsetY / state.size.height) * 2 + 1);\n      state.raycaster.setFromCamera(state.pointer, state.camera);\n    },\n    connected: undefined,\n    handlers: Object.keys(DOM_EVENTS).reduce((acc, key) => ({\n      ...acc,\n      [key]: handlePointer(key)\n    }), {}),\n    update: () => {\n      var _internal$lastEvent;\n      const {\n        events,\n        internal\n      } = store.getState();\n      if ((_internal$lastEvent = internal.lastEvent) != null && _internal$lastEvent.current && events.handlers) events.handlers.onPointerMove(internal.lastEvent.current);\n    },\n    connect: target => {\n      var _events$handlers;\n      const {\n        set,\n        events\n      } = store.getState();\n      events.disconnect == null ? void 0 : events.disconnect();\n      set(state => ({\n        events: {\n          ...state.events,\n          connected: target\n        }\n      }));\n      Object.entries((_events$handlers = events.handlers) != null ? _events$handlers : []).forEach(([name, event]) => {\n        const [eventName, passive] = DOM_EVENTS[name];\n        target.addEventListener(eventName, event, {\n          passive\n        });\n      });\n    },\n    disconnect: () => {\n      const {\n        set,\n        events\n      } = store.getState();\n      if (events.connected) {\n        var _events$handlers2;\n        Object.entries((_events$handlers2 = events.handlers) != null ? _events$handlers2 : []).forEach(([name, event]) => {\n          if (events && events.connected instanceof HTMLElement) {\n            const [eventName] = DOM_EVENTS[name];\n            events.connected.removeEventListener(eventName, event);\n          }\n        });\n        set(state => ({\n          events: {\n            ...state.events,\n            connected: undefined\n          }\n        }));\n      }\n    }\n  };\n}\n\nconst CanvasImpl = /*#__PURE__*/React.forwardRef(function Canvas({\n  children,\n  fallback,\n  resize,\n  style,\n  gl,\n  events = createPointerEvents,\n  eventSource,\n  eventPrefix,\n  shadows,\n  linear,\n  flat,\n  legacy,\n  orthographic,\n  frameloop,\n  dpr,\n  performance,\n  raycaster,\n  camera,\n  onPointerMissed,\n  onCreated,\n  ...props\n}, forwardedRef) {\n  // Create a known catalogue of Threejs-native elements\n  // This will include the entire THREE namespace by default, users can extend\n  // their own elements by using the createRoot API instead\n  React.useMemo(() => extend(THREE), []);\n  const Bridge = useContextBridge();\n  const [containerRef, containerRect] = useMeasure({\n    scroll: true,\n    debounce: {\n      scroll: 50,\n      resize: 0\n    },\n    ...resize\n  });\n  const canvasRef = React.useRef(null);\n  const divRef = React.useRef(null);\n  React.useImperativeHandle(forwardedRef, () => canvasRef.current);\n  const handlePointerMissed = useMutableCallback(onPointerMissed);\n  const [block, setBlock] = React.useState(false);\n  const [error, setError] = React.useState(false);\n\n  // Suspend this component if block is a promise (2nd run)\n  if (block) throw block;\n  // Throw exception outwards if anything within canvas throws\n  if (error) throw error;\n  const root = React.useRef(null);\n  useIsomorphicLayoutEffect(() => {\n    const canvas = canvasRef.current;\n    if (containerRect.width > 0 && containerRect.height > 0 && canvas) {\n      if (!root.current) root.current = createRoot(canvas);\n      root.current.configure({\n        gl,\n        events,\n        shadows,\n        linear,\n        flat,\n        legacy,\n        orthographic,\n        frameloop,\n        dpr,\n        performance,\n        raycaster,\n        camera,\n        size: containerRect,\n        // Pass mutable reference to onPointerMissed so it's free to update\n        onPointerMissed: (...args) => handlePointerMissed.current == null ? void 0 : handlePointerMissed.current(...args),\n        onCreated: state => {\n          // Connect to event source\n          state.events.connect == null ? void 0 : state.events.connect(eventSource ? isRef(eventSource) ? eventSource.current : eventSource : divRef.current);\n          // Set up compute function\n          if (eventPrefix) {\n            state.setEvents({\n              compute: (event, state) => {\n                const x = event[eventPrefix + 'X'];\n                const y = event[eventPrefix + 'Y'];\n                state.pointer.set(x / state.size.width * 2 - 1, -(y / state.size.height) * 2 + 1);\n                state.raycaster.setFromCamera(state.pointer, state.camera);\n              }\n            });\n          }\n          // Call onCreated callback\n          onCreated == null ? void 0 : onCreated(state);\n        }\n      });\n      root.current.render( /*#__PURE__*/React.createElement(Bridge, null, /*#__PURE__*/React.createElement(ErrorBoundary, {\n        set: setError\n      }, /*#__PURE__*/React.createElement(React.Suspense, {\n        fallback: /*#__PURE__*/React.createElement(Block, {\n          set: setBlock\n        })\n      }, children))));\n    }\n  });\n  React.useEffect(() => {\n    const canvas = canvasRef.current;\n    if (canvas) return () => unmountComponentAtNode(canvas);\n  }, []);\n\n  // When the event source is not this div, we need to set pointer-events to none\n  // Or else the canvas will block events from reaching the event source\n  const pointerEvents = eventSource ? 'none' : 'auto';\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: divRef,\n    style: {\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n      pointerEvents,\n      ...style\n    }\n  }, props), /*#__PURE__*/React.createElement(\"div\", {\n    ref: containerRef,\n    style: {\n      width: '100%',\n      height: '100%'\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      display: 'block'\n    }\n  }, fallback)));\n});\n\n/**\n * A DOM canvas which accepts threejs elements as children.\n * @see https://docs.pmnd.rs/react-three-fiber/api/canvas\n */\nconst Canvas = /*#__PURE__*/React.forwardRef(function CanvasWrapper(props, ref) {\n  return /*#__PURE__*/React.createElement(FiberProvider, null, /*#__PURE__*/React.createElement(CanvasImpl, _extends({}, props, {\n    ref: ref\n  })));\n});\n\nexport { Canvas, createPointerEvents as events };\n","/*!\n * camera-controls\n * https://github.com/yomotsu/camera-controls\n * (c) 2017 @yomotsu\n * Released under the MIT License.\n */\n// see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#value\nconst MOUSE_BUTTON = {\n    LEFT: 1,\n    RIGHT: 2,\n    MIDDLE: 4,\n};\nconst ACTION = Object.freeze({\n    NONE: 0,\n    ROTATE: 1,\n    TRUCK: 2,\n    OFFSET: 4,\n    DOLLY: 8,\n    ZOOM: 16,\n    TOUCH_ROTATE: 32,\n    TOUCH_TRUCK: 64,\n    TOUCH_OFFSET: 128,\n    TOUCH_DOLLY: 256,\n    TOUCH_ZOOM: 512,\n    TOUCH_DOLLY_TRUCK: 1024,\n    TOUCH_DOLLY_OFFSET: 2048,\n    TOUCH_DOLLY_ROTATE: 4096,\n    TOUCH_ZOOM_TRUCK: 8192,\n    TOUCH_ZOOM_OFFSET: 16384,\n    TOUCH_ZOOM_ROTATE: 32768,\n});\nconst DOLLY_DIRECTION = {\n    NONE: 0,\n    IN: 1,\n    OUT: -1,\n};\nfunction isPerspectiveCamera(camera) {\n    return camera.isPerspectiveCamera;\n}\nfunction isOrthographicCamera(camera) {\n    return camera.isOrthographicCamera;\n}\n\nconst PI_2 = Math.PI * 2;\nconst PI_HALF = Math.PI / 2;\n\nconst EPSILON = 1e-5;\nconst DEG2RAD = Math.PI / 180;\nfunction clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\nfunction approxZero(number, error = EPSILON) {\n    return Math.abs(number) < error;\n}\nfunction approxEquals(a, b, error = EPSILON) {\n    return approxZero(a - b, error);\n}\nfunction roundToStep(value, step) {\n    return Math.round(value / step) * step;\n}\nfunction infinityToMaxNumber(value) {\n    if (isFinite(value))\n        return value;\n    if (value < 0)\n        return -Number.MAX_VALUE;\n    return Number.MAX_VALUE;\n}\nfunction maxNumberToInfinity(value) {\n    if (Math.abs(value) < Number.MAX_VALUE)\n        return value;\n    return value * Infinity;\n}\n// https://docs.unity3d.com/ScriptReference/Mathf.SmoothDamp.html\n// https://github.com/Unity-Technologies/UnityCsReference/blob/a2bdfe9b3c4cd4476f44bf52f848063bfaf7b6b9/Runtime/Export/Math/Mathf.cs#L308\nfunction smoothDamp(current, target, currentVelocityRef, smoothTime, maxSpeed = Infinity, deltaTime) {\n    // Based on Game Programming Gems 4 Chapter 1.10\n    smoothTime = Math.max(0.0001, smoothTime);\n    const omega = 2 / smoothTime;\n    const x = omega * deltaTime;\n    const exp = 1 / (1 + x + 0.48 * x * x + 0.235 * x * x * x);\n    let change = current - target;\n    const originalTo = target;\n    // Clamp maximum speed\n    const maxChange = maxSpeed * smoothTime;\n    change = clamp(change, -maxChange, maxChange);\n    target = current - change;\n    const temp = (currentVelocityRef.value + omega * change) * deltaTime;\n    currentVelocityRef.value = (currentVelocityRef.value - omega * temp) * exp;\n    let output = target + (change + temp) * exp;\n    // Prevent overshooting\n    if (originalTo - current > 0.0 === output > originalTo) {\n        output = originalTo;\n        currentVelocityRef.value = (output - originalTo) / deltaTime;\n    }\n    return output;\n}\n// https://docs.unity3d.com/ScriptReference/Vector3.SmoothDamp.html\n// https://github.com/Unity-Technologies/UnityCsReference/blob/a2bdfe9b3c4cd4476f44bf52f848063bfaf7b6b9/Runtime/Export/Math/Vector3.cs#L97\nfunction smoothDampVec3(current, target, currentVelocityRef, smoothTime, maxSpeed = Infinity, deltaTime, out) {\n    // Based on Game Programming Gems 4 Chapter 1.10\n    smoothTime = Math.max(0.0001, smoothTime);\n    const omega = 2 / smoothTime;\n    const x = omega * deltaTime;\n    const exp = 1 / (1 + x + 0.48 * x * x + 0.235 * x * x * x);\n    let targetX = target.x;\n    let targetY = target.y;\n    let targetZ = target.z;\n    let changeX = current.x - targetX;\n    let changeY = current.y - targetY;\n    let changeZ = current.z - targetZ;\n    const originalToX = targetX;\n    const originalToY = targetY;\n    const originalToZ = targetZ;\n    // Clamp maximum speed\n    const maxChange = maxSpeed * smoothTime;\n    const maxChangeSq = maxChange * maxChange;\n    const magnitudeSq = changeX * changeX + changeY * changeY + changeZ * changeZ;\n    if (magnitudeSq > maxChangeSq) {\n        const magnitude = Math.sqrt(magnitudeSq);\n        changeX = changeX / magnitude * maxChange;\n        changeY = changeY / magnitude * maxChange;\n        changeZ = changeZ / magnitude * maxChange;\n    }\n    targetX = current.x - changeX;\n    targetY = current.y - changeY;\n    targetZ = current.z - changeZ;\n    const tempX = (currentVelocityRef.x + omega * changeX) * deltaTime;\n    const tempY = (currentVelocityRef.y + omega * changeY) * deltaTime;\n    const tempZ = (currentVelocityRef.z + omega * changeZ) * deltaTime;\n    currentVelocityRef.x = (currentVelocityRef.x - omega * tempX) * exp;\n    currentVelocityRef.y = (currentVelocityRef.y - omega * tempY) * exp;\n    currentVelocityRef.z = (currentVelocityRef.z - omega * tempZ) * exp;\n    out.x = targetX + (changeX + tempX) * exp;\n    out.y = targetY + (changeY + tempY) * exp;\n    out.z = targetZ + (changeZ + tempZ) * exp;\n    // Prevent overshooting\n    const origMinusCurrentX = originalToX - current.x;\n    const origMinusCurrentY = originalToY - current.y;\n    const origMinusCurrentZ = originalToZ - current.z;\n    const outMinusOrigX = out.x - originalToX;\n    const outMinusOrigY = out.y - originalToY;\n    const outMinusOrigZ = out.z - originalToZ;\n    if (origMinusCurrentX * outMinusOrigX + origMinusCurrentY * outMinusOrigY + origMinusCurrentZ * outMinusOrigZ > 0) {\n        out.x = originalToX;\n        out.y = originalToY;\n        out.z = originalToZ;\n        currentVelocityRef.x = (out.x - originalToX) / deltaTime;\n        currentVelocityRef.y = (out.y - originalToY) / deltaTime;\n        currentVelocityRef.z = (out.z - originalToZ) / deltaTime;\n    }\n    return out;\n}\n\nfunction extractClientCoordFromEvent(pointers, out) {\n    out.set(0, 0);\n    pointers.forEach((pointer) => {\n        out.x += pointer.clientX;\n        out.y += pointer.clientY;\n    });\n    out.x /= pointers.length;\n    out.y /= pointers.length;\n}\n\nfunction notSupportedInOrthographicCamera(camera, message) {\n    if (isOrthographicCamera(camera)) {\n        console.warn(`${message} is not supported in OrthographicCamera`);\n        return true;\n    }\n    return false;\n}\n\nclass EventDispatcher {\n    constructor() {\n        this._listeners = {};\n    }\n    /**\n     * Adds the specified event listener.\n     * @param type event name\n     * @param listener handler function\n     * @category Methods\n     */\n    addEventListener(type, listener) {\n        const listeners = this._listeners;\n        if (listeners[type] === undefined)\n            listeners[type] = [];\n        if (listeners[type].indexOf(listener) === -1)\n            listeners[type].push(listener);\n    }\n    /**\n     * Presence of the specified event listener.\n     * @param type event name\n     * @param listener handler function\n     * @category Methods\n     */\n    hasEventListener(type, listener) {\n        const listeners = this._listeners;\n        return listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1;\n    }\n    /**\n     * Removes the specified event listener\n     * @param type event name\n     * @param listener handler function\n     * @category Methods\n     */\n    removeEventListener(type, listener) {\n        const listeners = this._listeners;\n        const listenerArray = listeners[type];\n        if (listenerArray !== undefined) {\n            const index = listenerArray.indexOf(listener);\n            if (index !== -1)\n                listenerArray.splice(index, 1);\n        }\n    }\n    /**\n     * Removes all event listeners\n     * @param type event name\n     * @category Methods\n     */\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = {};\n            return;\n        }\n        if (Array.isArray(this._listeners[type]))\n            this._listeners[type].length = 0;\n    }\n    /**\n     * Fire an event type.\n     * @param event DispatcherEvent\n     * @category Methods\n     */\n    dispatchEvent(event) {\n        const listeners = this._listeners;\n        const listenerArray = listeners[event.type];\n        if (listenerArray !== undefined) {\n            event.target = this;\n            const array = listenerArray.slice(0);\n            for (let i = 0, l = array.length; i < l; i++) {\n                array[i].call(this, event);\n            }\n        }\n    }\n}\n\nconst VERSION = '2.7.3'; // will be replaced with `version` in package.json during the build process.\nconst TOUCH_DOLLY_FACTOR = 1 / 8;\nconst isBrowser = typeof window !== 'undefined';\nconst isMac = isBrowser && /Mac/.test(navigator.platform);\nconst isPointerEventsNotSupported = !(isBrowser && 'PointerEvent' in window); // macOS Safari 12 does not support PointerEvents API\nlet THREE;\nlet _ORIGIN;\nlet _AXIS_Y;\nlet _AXIS_Z;\nlet _v2;\nlet _v3A;\nlet _v3B;\nlet _v3C;\nlet _cameraDirection;\nlet _xColumn;\nlet _yColumn;\nlet _zColumn;\nlet _deltaTarget;\nlet _deltaOffset;\nlet _sphericalA;\nlet _sphericalB;\nlet _box3A;\nlet _box3B;\nlet _sphere;\nlet _quaternionA;\nlet _quaternionB;\nlet _rotationMatrix;\nlet _raycaster;\nclass CameraControls extends EventDispatcher {\n    /**\n     * Injects THREE as the dependency. You can then proceed to use CameraControls.\n     *\n     * e.g\n     * ```javascript\n     * CameraControls.install( { THREE: THREE } );\n     * ```\n     *\n     * Note: If you do not wish to use enter three.js to reduce file size(tree-shaking for example), make a subset to install.\n     *\n     * ```js\n     * import {\n     * \tVector2,\n     * \tVector3,\n     * \tVector4,\n     * \tQuaternion,\n     * \tMatrix4,\n     * \tSpherical,\n     * \tBox3,\n     * \tSphere,\n     * \tRaycaster,\n     * \tMathUtils,\n     * } from 'three';\n     *\n     * const subsetOfTHREE = {\n     * \tVector2   : Vector2,\n     * \tVector3   : Vector3,\n     * \tVector4   : Vector4,\n     * \tQuaternion: Quaternion,\n     * \tMatrix4   : Matrix4,\n     * \tSpherical : Spherical,\n     * \tBox3      : Box3,\n     * \tSphere    : Sphere,\n     * \tRaycaster : Raycaster,\n     * };\n\n     * CameraControls.install( { THREE: subsetOfTHREE } );\n     * ```\n     * @category Statics\n     */\n    static install(libs) {\n        THREE = libs.THREE;\n        _ORIGIN = Object.freeze(new THREE.Vector3(0, 0, 0));\n        _AXIS_Y = Object.freeze(new THREE.Vector3(0, 1, 0));\n        _AXIS_Z = Object.freeze(new THREE.Vector3(0, 0, 1));\n        _v2 = new THREE.Vector2();\n        _v3A = new THREE.Vector3();\n        _v3B = new THREE.Vector3();\n        _v3C = new THREE.Vector3();\n        _cameraDirection = new THREE.Vector3();\n        _xColumn = new THREE.Vector3();\n        _yColumn = new THREE.Vector3();\n        _zColumn = new THREE.Vector3();\n        _deltaTarget = new THREE.Vector3();\n        _deltaOffset = new THREE.Vector3();\n        _sphericalA = new THREE.Spherical();\n        _sphericalB = new THREE.Spherical();\n        _box3A = new THREE.Box3();\n        _box3B = new THREE.Box3();\n        _sphere = new THREE.Sphere();\n        _quaternionA = new THREE.Quaternion();\n        _quaternionB = new THREE.Quaternion();\n        _rotationMatrix = new THREE.Matrix4();\n        _raycaster = new THREE.Raycaster();\n    }\n    /**\n     * list all ACTIONs\n     * @category Statics\n     */\n    static get ACTION() {\n        return ACTION;\n    }\n    /**\n     * Creates a `CameraControls` instance.\n     *\n     * Note:\n     * You **must install** three.js before using camera-controls. see [#install](#install)\n     * Not doing so will lead to runtime errors (`undefined` references to THREE).\n     *\n     * e.g.\n     * ```\n     * CameraControls.install( { THREE } );\n     * const cameraControls = new CameraControls( camera, domElement );\n     * ```\n     *\n     * @param camera A `THREE.PerspectiveCamera` or `THREE.OrthographicCamera` to be controlled.\n     * @param domElement A `HTMLElement` for the draggable area, usually `renderer.domElement`.\n     * @category Constructor\n     */\n    constructor(camera, domElement) {\n        super();\n        /**\n         * Minimum vertical angle in radians.\n         * The angle has to be between `0` and `.maxPolarAngle` inclusive.\n         * The default value is `0`.\n         *\n         * e.g.\n         * ```\n         * cameraControls.maxPolarAngle = 0;\n         * ```\n         * @category Properties\n         */\n        this.minPolarAngle = 0; // radians\n        /**\n         * Maximum vertical angle in radians.\n         * The angle has to be between `.maxPolarAngle` and `Math.PI` inclusive.\n         * The default value is `Math.PI`.\n         *\n         * e.g.\n         * ```\n         * cameraControls.maxPolarAngle = Math.PI;\n         * ```\n         * @category Properties\n         */\n        this.maxPolarAngle = Math.PI; // radians\n        /**\n         * Minimum horizontal angle in radians.\n         * The angle has to be less than `.maxAzimuthAngle`.\n         * The default value is `- Infinity`.\n         *\n         * e.g.\n         * ```\n         * cameraControls.minAzimuthAngle = - Infinity;\n         * ```\n         * @category Properties\n         */\n        this.minAzimuthAngle = -Infinity; // radians\n        /**\n         * Maximum horizontal angle in radians.\n         * The angle has to be greater than `.minAzimuthAngle`.\n         * The default value is `Infinity`.\n         *\n         * e.g.\n         * ```\n         * cameraControls.maxAzimuthAngle = Infinity;\n         * ```\n         * @category Properties\n         */\n        this.maxAzimuthAngle = Infinity; // radians\n        // How far you can dolly in and out ( PerspectiveCamera only )\n        /**\n         * Minimum distance for dolly. The value must be higher than `0`. Default is `Number.EPSILON`.\n         * PerspectiveCamera only.\n         * @category Properties\n         */\n        this.minDistance = Number.EPSILON;\n        /**\n         * Maximum distance for dolly. The value must be higher than `minDistance`. Default is `Infinity`.\n         * PerspectiveCamera only.\n         * @category Properties\n         */\n        this.maxDistance = Infinity;\n        /**\n         * `true` to enable Infinity Dolly for wheel and pinch. Use this with `minDistance` and `maxDistance`\n         * If the Dolly distance is less (or over) than the `minDistance` (or `maxDistance`), `infinityDolly` will keep the distance and pushes the target position instead.\n         * @category Properties\n         */\n        this.infinityDolly = false;\n        /**\n         * Minimum camera zoom.\n         * @category Properties\n         */\n        this.minZoom = 0.01;\n        /**\n         * Maximum camera zoom.\n         * @category Properties\n         */\n        this.maxZoom = Infinity;\n        /**\n         * Approximate time in seconds to reach the target. A smaller value will reach the target faster.\n         * @category Properties\n         */\n        this.smoothTime = 0.25;\n        /**\n         * the smoothTime while dragging\n         * @category Properties\n         */\n        this.draggingSmoothTime = 0.125;\n        /**\n         * Max transition speed in unit-per-seconds\n         * @category Properties\n         */\n        this.maxSpeed = Infinity;\n        /**\n         * Speed of azimuth (horizontal) rotation.\n         * @category Properties\n         */\n        this.azimuthRotateSpeed = 1.0;\n        /**\n         * Speed of polar (vertical) rotation.\n         * @category Properties\n         */\n        this.polarRotateSpeed = 1.0;\n        /**\n         * Speed of mouse-wheel dollying.\n         * @category Properties\n         */\n        this.dollySpeed = 1.0;\n        /**\n         * `true` to invert direction when dollying or zooming via drag\n         * @category Properties\n         */\n        this.dollyDragInverted = false;\n        /**\n         * Speed of drag for truck and pedestal.\n         * @category Properties\n         */\n        this.truckSpeed = 2.0;\n        /**\n         * `true` to enable Dolly-in to the mouse cursor coords.\n         * @category Properties\n         */\n        this.dollyToCursor = false;\n        /**\n         * @category Properties\n         */\n        this.dragToOffset = false;\n        /**\n         * The same as `.screenSpacePanning` in three.js's OrbitControls.\n         * @category Properties\n         */\n        this.verticalDragToForward = false;\n        /**\n         * Friction ratio of the boundary.\n         * @category Properties\n         */\n        this.boundaryFriction = 0.0;\n        /**\n         * Controls how soon the `rest` event fires as the camera slows.\n         * @category Properties\n         */\n        this.restThreshold = 0.01;\n        /**\n         * An array of Meshes to collide with camera.\n         * Be aware colliderMeshes may decrease performance. The collision test uses 4 raycasters from the camera since the near plane has 4 corners.\n         * @category Properties\n         */\n        this.colliderMeshes = [];\n        /**\n         * Force cancel user dragging.\n         * @category Methods\n         */\n        // cancel will be overwritten in the constructor.\n        this.cancel = () => { };\n        this._enabled = true;\n        this._state = ACTION.NONE;\n        this._viewport = null;\n        this._changedDolly = 0;\n        this._changedZoom = 0;\n        this._hasRested = true;\n        this._boundaryEnclosesCamera = false;\n        this._needsUpdate = true;\n        this._updatedLastTime = false;\n        this._elementRect = new DOMRect();\n        this._isDragging = false;\n        this._dragNeedsUpdate = true;\n        this._activePointers = [];\n        this._lockedPointer = null;\n        this._interactiveArea = new DOMRect(0, 0, 1, 1);\n        // Use draggingSmoothTime over smoothTime while true.\n        // set automatically true on user-dragging start.\n        // set automatically false on programmable methods call.\n        this._isUserControllingRotate = false;\n        this._isUserControllingDolly = false;\n        this._isUserControllingTruck = false;\n        this._isUserControllingOffset = false;\n        this._isUserControllingZoom = false;\n        this._lastDollyDirection = DOLLY_DIRECTION.NONE;\n        // velocities for smoothDamp\n        this._thetaVelocity = { value: 0 };\n        this._phiVelocity = { value: 0 };\n        this._radiusVelocity = { value: 0 };\n        this._targetVelocity = new THREE.Vector3();\n        this._focalOffsetVelocity = new THREE.Vector3();\n        this._zoomVelocity = { value: 0 };\n        this._truckInternal = (deltaX, deltaY, dragToOffset) => {\n            let truckX;\n            let pedestalY;\n            if (isPerspectiveCamera(this._camera)) {\n                const offset = _v3A.copy(this._camera.position).sub(this._target);\n                // half of the fov is center to top of screen\n                const fov = this._camera.getEffectiveFOV() * DEG2RAD;\n                const targetDistance = offset.length() * Math.tan(fov * 0.5);\n                truckX = (this.truckSpeed * deltaX * targetDistance / this._elementRect.height);\n                pedestalY = (this.truckSpeed * deltaY * targetDistance / this._elementRect.height);\n            }\n            else if (isOrthographicCamera(this._camera)) {\n                const camera = this._camera;\n                truckX = deltaX * (camera.right - camera.left) / camera.zoom / this._elementRect.width;\n                pedestalY = deltaY * (camera.top - camera.bottom) / camera.zoom / this._elementRect.height;\n            }\n            else {\n                return;\n            }\n            if (this.verticalDragToForward) {\n                dragToOffset ?\n                    this.setFocalOffset(this._focalOffsetEnd.x + truckX, this._focalOffsetEnd.y, this._focalOffsetEnd.z, true) :\n                    this.truck(truckX, 0, true);\n                this.forward(-pedestalY, true);\n            }\n            else {\n                dragToOffset ?\n                    this.setFocalOffset(this._focalOffsetEnd.x + truckX, this._focalOffsetEnd.y + pedestalY, this._focalOffsetEnd.z, true) :\n                    this.truck(truckX, pedestalY, true);\n            }\n        };\n        this._rotateInternal = (deltaX, deltaY) => {\n            const theta = PI_2 * this.azimuthRotateSpeed * deltaX / this._elementRect.height; // divide by *height* to refer the resolution\n            const phi = PI_2 * this.polarRotateSpeed * deltaY / this._elementRect.height;\n            this.rotate(theta, phi, true);\n        };\n        this._dollyInternal = (delta, x, y) => {\n            const dollyScale = Math.pow(0.95, -delta * this.dollySpeed);\n            const lastDistance = this._sphericalEnd.radius;\n            const distance = this._sphericalEnd.radius * dollyScale;\n            const clampedDistance = clamp(distance, this.minDistance, this.maxDistance);\n            const overflowedDistance = clampedDistance - distance;\n            if (this.infinityDolly && this.dollyToCursor) {\n                this._dollyToNoClamp(distance, true);\n            }\n            else if (this.infinityDolly && !this.dollyToCursor) {\n                this.dollyInFixed(overflowedDistance, true);\n                this._dollyToNoClamp(clampedDistance, true);\n            }\n            else {\n                this._dollyToNoClamp(clampedDistance, true);\n            }\n            if (this.dollyToCursor) {\n                this._changedDolly += (this.infinityDolly ? distance : clampedDistance) - lastDistance;\n                this._dollyControlCoord.set(x, y);\n            }\n            this._lastDollyDirection = Math.sign(-delta);\n        };\n        this._zoomInternal = (delta, x, y) => {\n            const zoomScale = Math.pow(0.95, delta * this.dollySpeed);\n            const lastZoom = this._zoom;\n            const zoom = this._zoom * zoomScale;\n            // for both PerspectiveCamera and OrthographicCamera\n            this.zoomTo(zoom, true);\n            if (this.dollyToCursor) {\n                this._changedZoom += zoom - lastZoom;\n                this._dollyControlCoord.set(x, y);\n            }\n        };\n        // Check if the user has installed THREE\n        if (typeof THREE === 'undefined') {\n            console.error('camera-controls: `THREE` is undefined. You must first run `CameraControls.install( { THREE: THREE } )`. Check the docs for further information.');\n        }\n        this._camera = camera;\n        this._yAxisUpSpace = new THREE.Quaternion().setFromUnitVectors(this._camera.up, _AXIS_Y);\n        this._yAxisUpSpaceInverse = this._yAxisUpSpace.clone().invert();\n        this._state = ACTION.NONE;\n        // the location\n        this._target = new THREE.Vector3();\n        this._targetEnd = this._target.clone();\n        this._focalOffset = new THREE.Vector3();\n        this._focalOffsetEnd = this._focalOffset.clone();\n        // rotation\n        this._spherical = new THREE.Spherical().setFromVector3(_v3A.copy(this._camera.position).applyQuaternion(this._yAxisUpSpace));\n        this._sphericalEnd = this._spherical.clone();\n        this._lastDistance = this._spherical.radius;\n        this._zoom = this._camera.zoom;\n        this._zoomEnd = this._zoom;\n        this._lastZoom = this._zoom;\n        // collisionTest uses nearPlane.s\n        this._nearPlaneCorners = [\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n        ];\n        this._updateNearPlaneCorners();\n        // Target cannot move outside of this box\n        this._boundary = new THREE.Box3(new THREE.Vector3(-Infinity, -Infinity, -Infinity), new THREE.Vector3(Infinity, Infinity, Infinity));\n        // reset\n        this._cameraUp0 = this._camera.up.clone();\n        this._target0 = this._target.clone();\n        this._position0 = this._camera.position.clone();\n        this._zoom0 = this._zoom;\n        this._focalOffset0 = this._focalOffset.clone();\n        this._dollyControlCoord = new THREE.Vector2();\n        // configs\n        this.mouseButtons = {\n            left: ACTION.ROTATE,\n            middle: ACTION.DOLLY,\n            right: ACTION.TRUCK,\n            wheel: isPerspectiveCamera(this._camera) ? ACTION.DOLLY :\n                isOrthographicCamera(this._camera) ? ACTION.ZOOM :\n                    ACTION.NONE,\n        };\n        this.touches = {\n            one: ACTION.TOUCH_ROTATE,\n            two: isPerspectiveCamera(this._camera) ? ACTION.TOUCH_DOLLY_TRUCK :\n                isOrthographicCamera(this._camera) ? ACTION.TOUCH_ZOOM_TRUCK :\n                    ACTION.NONE,\n            three: ACTION.TOUCH_TRUCK,\n        };\n        const dragStartPosition = new THREE.Vector2();\n        const lastDragPosition = new THREE.Vector2();\n        const dollyStart = new THREE.Vector2();\n        const onPointerDown = (event) => {\n            if (!this._enabled || !this._domElement)\n                return;\n            if (this._interactiveArea.left !== 0 ||\n                this._interactiveArea.top !== 0 ||\n                this._interactiveArea.width !== 1 ||\n                this._interactiveArea.height !== 1) {\n                const elRect = this._domElement.getBoundingClientRect();\n                const left = event.clientX / elRect.width;\n                const top = event.clientY / elRect.height;\n                // check if the interactiveArea contains the drag start position.\n                if (left < this._interactiveArea.left ||\n                    left > this._interactiveArea.right ||\n                    top < this._interactiveArea.top ||\n                    top > this._interactiveArea.bottom)\n                    return;\n            }\n            // Don't call `event.preventDefault()` on the pointerdown event\n            // to keep receiving pointermove evens outside dragging iframe\n            // https://taye.me/blog/tips/2015/11/16/mouse-drag-outside-iframe/\n            const mouseButton = event.pointerType !== 'mouse' ? null :\n                (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT ? MOUSE_BUTTON.LEFT :\n                    (event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE ? MOUSE_BUTTON.MIDDLE :\n                        (event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT ? MOUSE_BUTTON.RIGHT :\n                            null;\n            if (mouseButton !== null) {\n                const zombiePointer = this._findPointerByMouseButton(mouseButton);\n                zombiePointer && this._disposePointer(zombiePointer);\n            }\n            if ((event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT && this._lockedPointer)\n                return;\n            const pointer = {\n                pointerId: event.pointerId,\n                clientX: event.clientX,\n                clientY: event.clientY,\n                deltaX: 0,\n                deltaY: 0,\n                mouseButton,\n            };\n            this._activePointers.push(pointer);\n            // eslint-disable-next-line no-undef\n            this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false });\n            this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n            this._domElement.ownerDocument.addEventListener('pointermove', onPointerMove, { passive: false });\n            this._domElement.ownerDocument.addEventListener('pointerup', onPointerUp);\n            this._isDragging = true;\n            startDragging(event);\n        };\n        const onMouseDown = (event) => {\n            if (!this._enabled || !this._domElement || this._lockedPointer)\n                return;\n            if (this._interactiveArea.left !== 0 ||\n                this._interactiveArea.top !== 0 ||\n                this._interactiveArea.width !== 1 ||\n                this._interactiveArea.height !== 1) {\n                const elRect = this._domElement.getBoundingClientRect();\n                const left = event.clientX / elRect.width;\n                const top = event.clientY / elRect.height;\n                // check if the interactiveArea contains the drag start position.\n                if (left < this._interactiveArea.left ||\n                    left > this._interactiveArea.right ||\n                    top < this._interactiveArea.top ||\n                    top > this._interactiveArea.bottom)\n                    return;\n            }\n            const mouseButton = (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT ? MOUSE_BUTTON.LEFT :\n                (event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE ? MOUSE_BUTTON.MIDDLE :\n                    (event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT ? MOUSE_BUTTON.RIGHT :\n                        null;\n            if (mouseButton !== null) {\n                const zombiePointer = this._findPointerByMouseButton(mouseButton);\n                zombiePointer && this._disposePointer(zombiePointer);\n            }\n            const pointer = {\n                pointerId: 1,\n                clientX: event.clientX,\n                clientY: event.clientY,\n                deltaX: 0,\n                deltaY: 0,\n                mouseButton: (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT ? MOUSE_BUTTON.LEFT :\n                    (event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.LEFT ? MOUSE_BUTTON.MIDDLE :\n                        (event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.LEFT ? MOUSE_BUTTON.RIGHT :\n                            null,\n            };\n            this._activePointers.push(pointer);\n            // see https://github.com/microsoft/TypeScript/issues/32912#issuecomment-522142969\n            // eslint-disable-next-line no-undef\n            this._domElement.ownerDocument.removeEventListener('mousemove', onMouseMove);\n            this._domElement.ownerDocument.removeEventListener('mouseup', onMouseUp);\n            this._domElement.ownerDocument.addEventListener('mousemove', onMouseMove);\n            this._domElement.ownerDocument.addEventListener('mouseup', onMouseUp);\n            this._isDragging = true;\n            startDragging(event);\n        };\n        const onPointerMove = (event) => {\n            if (event.cancelable)\n                event.preventDefault();\n            const pointerId = event.pointerId;\n            const pointer = this._lockedPointer || this._findPointerById(pointerId);\n            if (!pointer)\n                return;\n            pointer.clientX = event.clientX;\n            pointer.clientY = event.clientY;\n            pointer.deltaX = event.movementX;\n            pointer.deltaY = event.movementY;\n            this._state = 0;\n            if (event.pointerType === 'touch') {\n                switch (this._activePointers.length) {\n                    case 1:\n                        this._state = this.touches.one;\n                        break;\n                    case 2:\n                        this._state = this.touches.two;\n                        break;\n                    case 3:\n                        this._state = this.touches.three;\n                        break;\n                }\n            }\n            else {\n                if ((!this._isDragging && this._lockedPointer) ||\n                    this._isDragging && (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT) {\n                    this._state = this._state | this.mouseButtons.left;\n                }\n                if (this._isDragging && (event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE) {\n                    this._state = this._state | this.mouseButtons.middle;\n                }\n                if (this._isDragging && (event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT) {\n                    this._state = this._state | this.mouseButtons.right;\n                }\n            }\n            dragging();\n        };\n        const onMouseMove = (event) => {\n            const pointer = this._lockedPointer || this._findPointerById(1);\n            if (!pointer)\n                return;\n            pointer.clientX = event.clientX;\n            pointer.clientY = event.clientY;\n            pointer.deltaX = event.movementX;\n            pointer.deltaY = event.movementY;\n            this._state = 0;\n            if (this._lockedPointer ||\n                (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT) {\n                this._state = this._state | this.mouseButtons.left;\n            }\n            if ((event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE) {\n                this._state = this._state | this.mouseButtons.middle;\n            }\n            if ((event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT) {\n                this._state = this._state | this.mouseButtons.right;\n            }\n            dragging();\n        };\n        const onPointerUp = (event) => {\n            const pointer = this._findPointerById(event.pointerId);\n            if (pointer && pointer === this._lockedPointer)\n                return;\n            pointer && this._disposePointer(pointer);\n            if (event.pointerType === 'touch') {\n                switch (this._activePointers.length) {\n                    case 0:\n                        this._state = ACTION.NONE;\n                        break;\n                    case 1:\n                        this._state = this.touches.one;\n                        break;\n                    case 2:\n                        this._state = this.touches.two;\n                        break;\n                    case 3:\n                        this._state = this.touches.three;\n                        break;\n                }\n            }\n            else {\n                this._state = ACTION.NONE;\n            }\n            endDragging();\n        };\n        const onMouseUp = () => {\n            const pointer = this._findPointerById(1);\n            if (pointer && pointer === this._lockedPointer)\n                return;\n            pointer && this._disposePointer(pointer);\n            this._state = ACTION.NONE;\n            endDragging();\n        };\n        let lastScrollTimeStamp = -1;\n        const onMouseWheel = (event) => {\n            if (!this._domElement)\n                return;\n            if (!this._enabled || this.mouseButtons.wheel === ACTION.NONE)\n                return;\n            if (this._interactiveArea.left !== 0 ||\n                this._interactiveArea.top !== 0 ||\n                this._interactiveArea.width !== 1 ||\n                this._interactiveArea.height !== 1) {\n                const elRect = this._domElement.getBoundingClientRect();\n                const left = event.clientX / elRect.width;\n                const top = event.clientY / elRect.height;\n                // check if the interactiveArea contains the drag start position.\n                if (left < this._interactiveArea.left ||\n                    left > this._interactiveArea.right ||\n                    top < this._interactiveArea.top ||\n                    top > this._interactiveArea.bottom)\n                    return;\n            }\n            event.preventDefault();\n            if (this.dollyToCursor ||\n                this.mouseButtons.wheel === ACTION.ROTATE ||\n                this.mouseButtons.wheel === ACTION.TRUCK) {\n                const now = performance.now();\n                // only need to fire this at scroll start.\n                if (lastScrollTimeStamp - now < 1000)\n                    this._getClientRect(this._elementRect);\n                lastScrollTimeStamp = now;\n            }\n            // Ref: https://github.com/cedricpinson/osgjs/blob/00e5a7e9d9206c06fdde0436e1d62ab7cb5ce853/sources/osgViewer/input/source/InputSourceMouse.js#L89-L103\n            const deltaYFactor = isMac ? -1 : -3;\n            const delta = (event.deltaMode === 1) ? event.deltaY / deltaYFactor : event.deltaY / (deltaYFactor * 10);\n            const x = this.dollyToCursor ? (event.clientX - this._elementRect.x) / this._elementRect.width * 2 - 1 : 0;\n            const y = this.dollyToCursor ? (event.clientY - this._elementRect.y) / this._elementRect.height * -2 + 1 : 0;\n            switch (this.mouseButtons.wheel) {\n                case ACTION.ROTATE: {\n                    this._rotateInternal(event.deltaX, event.deltaY);\n                    this._isUserControllingRotate = true;\n                    break;\n                }\n                case ACTION.TRUCK: {\n                    this._truckInternal(event.deltaX, event.deltaY, false);\n                    this._isUserControllingTruck = true;\n                    break;\n                }\n                case ACTION.OFFSET: {\n                    this._truckInternal(event.deltaX, event.deltaY, true);\n                    this._isUserControllingOffset = true;\n                    break;\n                }\n                case ACTION.DOLLY: {\n                    this._dollyInternal(-delta, x, y);\n                    this._isUserControllingDolly = true;\n                    break;\n                }\n                case ACTION.ZOOM: {\n                    this._zoomInternal(-delta, x, y);\n                    this._isUserControllingZoom = true;\n                    break;\n                }\n            }\n            this.dispatchEvent({ type: 'control' });\n        };\n        const onContextMenu = (event) => {\n            if (!this._domElement || !this._enabled)\n                return;\n            // contextmenu event is fired right after pointerdown/mousedown.\n            // remove attached handlers and active pointer, if interrupted by contextmenu.\n            if (this.mouseButtons.right === CameraControls.ACTION.NONE) {\n                const pointerId = event instanceof PointerEvent ? event.pointerId :\n                    event instanceof MouseEvent ? 0 :\n                        0;\n                const pointer = this._findPointerById(pointerId);\n                pointer && this._disposePointer(pointer);\n                // eslint-disable-next-line no-undef\n                this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false });\n                this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n                this._domElement.ownerDocument.removeEventListener('mousemove', onMouseMove);\n                this._domElement.ownerDocument.removeEventListener('mouseup', onMouseUp);\n                return;\n            }\n            event.preventDefault();\n        };\n        const startDragging = (event) => {\n            if (!this._enabled)\n                return;\n            extractClientCoordFromEvent(this._activePointers, _v2);\n            this._getClientRect(this._elementRect);\n            dragStartPosition.copy(_v2);\n            lastDragPosition.copy(_v2);\n            const isMultiTouch = this._activePointers.length >= 2;\n            if (isMultiTouch) {\n                // 2 finger pinch\n                const dx = _v2.x - this._activePointers[1].clientX;\n                const dy = _v2.y - this._activePointers[1].clientY;\n                const distance = Math.sqrt(dx * dx + dy * dy);\n                dollyStart.set(0, distance);\n                // center coords of 2 finger truck\n                const x = (this._activePointers[0].clientX + this._activePointers[1].clientX) * 0.5;\n                const y = (this._activePointers[0].clientY + this._activePointers[1].clientY) * 0.5;\n                lastDragPosition.set(x, y);\n            }\n            this._state = 0;\n            if (!event) {\n                if (this._lockedPointer)\n                    this._state = this._state | this.mouseButtons.left;\n            }\n            else if ('pointerType' in event && event.pointerType === 'touch') {\n                switch (this._activePointers.length) {\n                    case 1:\n                        this._state = this.touches.one;\n                        break;\n                    case 2:\n                        this._state = this.touches.two;\n                        break;\n                    case 3:\n                        this._state = this.touches.three;\n                        break;\n                }\n            }\n            else {\n                if (!this._lockedPointer && (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT) {\n                    this._state = this._state | this.mouseButtons.left;\n                }\n                if ((event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE) {\n                    this._state = this._state | this.mouseButtons.middle;\n                }\n                if ((event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT) {\n                    this._state = this._state | this.mouseButtons.right;\n                }\n            }\n            // stop current movement on drag start\n            if ((this._state & ACTION.ROTATE) === ACTION.ROTATE ||\n                (this._state & ACTION.TOUCH_ROTATE) === ACTION.TOUCH_ROTATE ||\n                (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE ||\n                (this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {\n                this._sphericalEnd.theta = this._spherical.theta;\n                this._sphericalEnd.phi = this._spherical.phi;\n                this._thetaVelocity.value = 0;\n                this._phiVelocity.value = 0;\n            }\n            if ((this._state & ACTION.TRUCK) === ACTION.TRUCK ||\n                (this._state & ACTION.TOUCH_TRUCK) === ACTION.TOUCH_TRUCK ||\n                (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\n                (this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK) {\n                this._targetEnd.copy(this._target);\n                this._targetVelocity.set(0, 0, 0);\n            }\n            if ((this._state & ACTION.DOLLY) === ACTION.DOLLY ||\n                (this._state & ACTION.TOUCH_DOLLY) === ACTION.TOUCH_DOLLY ||\n                (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\n                (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET ||\n                (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE) {\n                this._sphericalEnd.radius = this._spherical.radius;\n                this._radiusVelocity.value = 0;\n            }\n            if ((this._state & ACTION.ZOOM) === ACTION.ZOOM ||\n                (this._state & ACTION.TOUCH_ZOOM) === ACTION.TOUCH_ZOOM ||\n                (this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK ||\n                (this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET ||\n                (this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {\n                this._zoomEnd = this._zoom;\n                this._zoomVelocity.value = 0;\n            }\n            if ((this._state & ACTION.OFFSET) === ACTION.OFFSET ||\n                (this._state & ACTION.TOUCH_OFFSET) === ACTION.TOUCH_OFFSET ||\n                (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET ||\n                (this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET) {\n                this._focalOffsetEnd.copy(this._focalOffset);\n                this._focalOffsetVelocity.set(0, 0, 0);\n            }\n            this.dispatchEvent({ type: 'controlstart' });\n        };\n        const dragging = () => {\n            if (!this._enabled || !this._dragNeedsUpdate)\n                return;\n            this._dragNeedsUpdate = false;\n            extractClientCoordFromEvent(this._activePointers, _v2);\n            // When pointer lock is enabled clientX, clientY, screenX, and screenY remain 0.\n            // If pointer lock is enabled, use the Delta directory, and assume active-pointer is not multiple.\n            const isPointerLockActive = this._domElement && document.pointerLockElement === this._domElement;\n            const lockedPointer = isPointerLockActive ? this._lockedPointer || this._activePointers[0] : null;\n            const deltaX = lockedPointer ? -lockedPointer.deltaX : lastDragPosition.x - _v2.x;\n            const deltaY = lockedPointer ? -lockedPointer.deltaY : lastDragPosition.y - _v2.y;\n            lastDragPosition.copy(_v2);\n            if ((this._state & ACTION.ROTATE) === ACTION.ROTATE ||\n                (this._state & ACTION.TOUCH_ROTATE) === ACTION.TOUCH_ROTATE ||\n                (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE ||\n                (this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {\n                this._rotateInternal(deltaX, deltaY);\n                this._isUserControllingRotate = true;\n            }\n            if ((this._state & ACTION.DOLLY) === ACTION.DOLLY ||\n                (this._state & ACTION.ZOOM) === ACTION.ZOOM) {\n                const dollyX = this.dollyToCursor ? (dragStartPosition.x - this._elementRect.x) / this._elementRect.width * 2 - 1 : 0;\n                const dollyY = this.dollyToCursor ? (dragStartPosition.y - this._elementRect.y) / this._elementRect.height * -2 + 1 : 0;\n                const dollyDirection = this.dollyDragInverted ? -1 : 1;\n                if ((this._state & ACTION.DOLLY) === ACTION.DOLLY) {\n                    this._dollyInternal(dollyDirection * deltaY * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\n                    this._isUserControllingDolly = true;\n                }\n                else {\n                    this._zoomInternal(dollyDirection * deltaY * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\n                    this._isUserControllingZoom = true;\n                }\n            }\n            if ((this._state & ACTION.TOUCH_DOLLY) === ACTION.TOUCH_DOLLY ||\n                (this._state & ACTION.TOUCH_ZOOM) === ACTION.TOUCH_ZOOM ||\n                (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\n                (this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK ||\n                (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET ||\n                (this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET ||\n                (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE ||\n                (this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {\n                const dx = _v2.x - this._activePointers[1].clientX;\n                const dy = _v2.y - this._activePointers[1].clientY;\n                const distance = Math.sqrt(dx * dx + dy * dy);\n                const dollyDelta = dollyStart.y - distance;\n                dollyStart.set(0, distance);\n                const dollyX = this.dollyToCursor ? (lastDragPosition.x - this._elementRect.x) / this._elementRect.width * 2 - 1 : 0;\n                const dollyY = this.dollyToCursor ? (lastDragPosition.y - this._elementRect.y) / this._elementRect.height * -2 + 1 : 0;\n                if ((this._state & ACTION.TOUCH_DOLLY) === ACTION.TOUCH_DOLLY ||\n                    (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE ||\n                    (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\n                    (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET) {\n                    this._dollyInternal(dollyDelta * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\n                    this._isUserControllingDolly = true;\n                }\n                else {\n                    this._zoomInternal(dollyDelta * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\n                    this._isUserControllingZoom = true;\n                }\n            }\n            if ((this._state & ACTION.TRUCK) === ACTION.TRUCK ||\n                (this._state & ACTION.TOUCH_TRUCK) === ACTION.TOUCH_TRUCK ||\n                (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\n                (this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK) {\n                this._truckInternal(deltaX, deltaY, false);\n                this._isUserControllingTruck = true;\n            }\n            if ((this._state & ACTION.OFFSET) === ACTION.OFFSET ||\n                (this._state & ACTION.TOUCH_OFFSET) === ACTION.TOUCH_OFFSET ||\n                (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET ||\n                (this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET) {\n                this._truckInternal(deltaX, deltaY, true);\n                this._isUserControllingOffset = true;\n            }\n            this.dispatchEvent({ type: 'control' });\n        };\n        const endDragging = () => {\n            extractClientCoordFromEvent(this._activePointers, _v2);\n            lastDragPosition.copy(_v2);\n            this._dragNeedsUpdate = false;\n            if (this._activePointers.length === 0 ||\n                (this._activePointers.length === 1 && this._activePointers[0] === this._lockedPointer)) {\n                this._isDragging = false;\n            }\n            if (this._activePointers.length === 0 && this._domElement) {\n                // eslint-disable-next-line no-undef\n                this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false });\n                this._domElement.ownerDocument.removeEventListener('mousemove', onMouseMove);\n                this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n                this._domElement.ownerDocument.removeEventListener('mouseup', onMouseUp);\n                this.dispatchEvent({ type: 'controlend' });\n            }\n        };\n        this.lockPointer = () => {\n            if (!this._enabled || !this._domElement)\n                return;\n            this.cancel();\n            // Element.requestPointerLock is allowed to happen without any pointer active - create a faux one for compatibility with controls\n            this._lockedPointer = {\n                pointerId: -1,\n                clientX: 0,\n                clientY: 0,\n                deltaX: 0,\n                deltaY: 0,\n                mouseButton: null,\n            };\n            this._activePointers.push(this._lockedPointer);\n            // eslint-disable-next-line no-undef\n            this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false });\n            this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n            this._domElement.requestPointerLock();\n            this._domElement.ownerDocument.addEventListener('pointerlockchange', onPointerLockChange);\n            this._domElement.ownerDocument.addEventListener('pointerlockerror', onPointerLockError);\n            this._domElement.ownerDocument.addEventListener('pointermove', onPointerMove, { passive: false });\n            this._domElement.ownerDocument.addEventListener('pointerup', onPointerUp);\n            startDragging();\n        };\n        this.unlockPointer = () => {\n            if (this._lockedPointer !== null) {\n                this._disposePointer(this._lockedPointer);\n                this._lockedPointer = null;\n            }\n            document.exitPointerLock();\n            this.cancel();\n            if (!this._domElement)\n                return;\n            this._domElement.ownerDocument.removeEventListener('pointerlockchange', onPointerLockChange);\n            this._domElement.ownerDocument.removeEventListener('pointerlockerror', onPointerLockError);\n        };\n        const onPointerLockChange = () => {\n            const isPointerLockActive = this._domElement && this._domElement.ownerDocument.pointerLockElement === this._domElement;\n            if (!isPointerLockActive)\n                this.unlockPointer();\n        };\n        const onPointerLockError = () => {\n            this.unlockPointer();\n        };\n        this._addAllEventListeners = (domElement) => {\n            this._domElement = domElement;\n            this._domElement.style.touchAction = 'none';\n            this._domElement.style.userSelect = 'none';\n            this._domElement.style.webkitUserSelect = 'none';\n            this._domElement.addEventListener('pointerdown', onPointerDown);\n            isPointerEventsNotSupported && this._domElement.addEventListener('mousedown', onMouseDown);\n            this._domElement.addEventListener('pointercancel', onPointerUp);\n            this._domElement.addEventListener('wheel', onMouseWheel, { passive: false });\n            this._domElement.addEventListener('contextmenu', onContextMenu);\n        };\n        this._removeAllEventListeners = () => {\n            if (!this._domElement)\n                return;\n            this._domElement.style.touchAction = '';\n            this._domElement.style.userSelect = '';\n            this._domElement.style.webkitUserSelect = '';\n            this._domElement.removeEventListener('pointerdown', onPointerDown);\n            this._domElement.removeEventListener('mousedown', onMouseDown);\n            this._domElement.removeEventListener('pointercancel', onPointerUp);\n            // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener#matching_event_listeners_for_removal\n            // > it's probably wise to use the same values used for the call to `addEventListener()` when calling `removeEventListener()`\n            // see https://github.com/microsoft/TypeScript/issues/32912#issuecomment-522142969\n            // eslint-disable-next-line no-undef\n            this._domElement.removeEventListener('wheel', onMouseWheel, { passive: false });\n            this._domElement.removeEventListener('contextmenu', onContextMenu);\n            // eslint-disable-next-line no-undef\n            this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false });\n            this._domElement.ownerDocument.removeEventListener('mousemove', onMouseMove);\n            this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n            this._domElement.ownerDocument.removeEventListener('mouseup', onMouseUp);\n            this._domElement.ownerDocument.removeEventListener('pointerlockchange', onPointerLockChange);\n            this._domElement.ownerDocument.removeEventListener('pointerlockerror', onPointerLockError);\n        };\n        this.cancel = () => {\n            if (this._state === ACTION.NONE)\n                return;\n            this._state = ACTION.NONE;\n            this._activePointers.length = 0;\n            endDragging();\n        };\n        if (domElement)\n            this.connect(domElement);\n        this.update(0);\n    }\n    /**\n     * The camera to be controlled\n     * @category Properties\n     */\n    get camera() {\n        return this._camera;\n    }\n    set camera(camera) {\n        this._camera = camera;\n        this.updateCameraUp();\n        this._camera.updateProjectionMatrix();\n        this._updateNearPlaneCorners();\n        this._needsUpdate = true;\n    }\n    /**\n     * Whether or not the controls are enabled.\n     * `false` to disable user dragging/touch-move, but all methods works.\n     * @category Properties\n     */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(enabled) {\n        this._enabled = enabled;\n        if (!this._domElement)\n            return;\n        if (enabled) {\n            this._domElement.style.touchAction = 'none';\n            this._domElement.style.userSelect = 'none';\n            this._domElement.style.webkitUserSelect = 'none';\n        }\n        else {\n            this.cancel();\n            this._domElement.style.touchAction = '';\n            this._domElement.style.userSelect = '';\n            this._domElement.style.webkitUserSelect = '';\n        }\n    }\n    /**\n     * Returns `true` if the controls are active updating.\n     * readonly value.\n     * @category Properties\n     */\n    get active() {\n        return !this._hasRested;\n    }\n    /**\n     * Getter for the current `ACTION`.\n     * readonly value.\n     * @category Properties\n     */\n    get currentAction() {\n        return this._state;\n    }\n    /**\n     * get/set Current distance.\n     * @category Properties\n     */\n    get distance() {\n        return this._spherical.radius;\n    }\n    set distance(distance) {\n        if (this._spherical.radius === distance &&\n            this._sphericalEnd.radius === distance)\n            return;\n        this._spherical.radius = distance;\n        this._sphericalEnd.radius = distance;\n        this._needsUpdate = true;\n    }\n    // horizontal angle\n    /**\n     * get/set the azimuth angle (horizontal) in radians.\n     * Every 360 degrees turn is added to `.azimuthAngle` value, which is accumulative.\n     * @category Properties\n     */\n    get azimuthAngle() {\n        return this._spherical.theta;\n    }\n    set azimuthAngle(azimuthAngle) {\n        if (this._spherical.theta === azimuthAngle &&\n            this._sphericalEnd.theta === azimuthAngle)\n            return;\n        this._spherical.theta = azimuthAngle;\n        this._sphericalEnd.theta = azimuthAngle;\n        this._needsUpdate = true;\n    }\n    // vertical angle\n    /**\n     * get/set the polar angle (vertical) in radians.\n     * @category Properties\n     */\n    get polarAngle() {\n        return this._spherical.phi;\n    }\n    set polarAngle(polarAngle) {\n        if (this._spherical.phi === polarAngle &&\n            this._sphericalEnd.phi === polarAngle)\n            return;\n        this._spherical.phi = polarAngle;\n        this._sphericalEnd.phi = polarAngle;\n        this._needsUpdate = true;\n    }\n    /**\n     * Whether camera position should be enclosed in the boundary or not.\n     * @category Properties\n     */\n    get boundaryEnclosesCamera() {\n        return this._boundaryEnclosesCamera;\n    }\n    set boundaryEnclosesCamera(boundaryEnclosesCamera) {\n        this._boundaryEnclosesCamera = boundaryEnclosesCamera;\n        this._needsUpdate = true;\n    }\n    /**\n     * Set drag-start, touches and wheel enable area in the domElement.\n     * each values are between `0` and `1` inclusive, where `0` is left/top and `1` is right/bottom of the screen.\n     * e.g. `{ x: 0, y: 0, width: 1, height: 1 }` for entire area.\n     * @category Properties\n     */\n    set interactiveArea(interactiveArea) {\n        this._interactiveArea.width = clamp(interactiveArea.width, 0, 1);\n        this._interactiveArea.height = clamp(interactiveArea.height, 0, 1);\n        this._interactiveArea.x = clamp(interactiveArea.x, 0, 1 - this._interactiveArea.width);\n        this._interactiveArea.y = clamp(interactiveArea.y, 0, 1 - this._interactiveArea.height);\n    }\n    /**\n     * Adds the specified event listener.\n     * Applicable event types (which is `K`) are:\n     * | Event name          | Timing |\n     * | ------------------- | ------ |\n     * | `'controlstart'`    | When the user starts to control the camera via mouse / touches. ¹ |\n     * | `'control'`         | When the user controls the camera (dragging). |\n     * | `'controlend'`      | When the user ends to control the camera. ¹ |\n     * | `'transitionstart'` | When any kind of transition starts, either user control or using a method with `enableTransition = true` |\n     * | `'update'`          | When the camera position is updated. |\n     * | `'wake'`            | When the camera starts moving. |\n     * | `'rest'`            | When the camera movement is below `.restThreshold` ². |\n     * | `'sleep'`           | When the camera end moving. |\n     *\n     * 1. `mouseButtons.wheel` (Mouse wheel control) does not emit `'controlstart'` and `'controlend'`. `mouseButtons.wheel` uses scroll-event internally, and scroll-event happens intermittently. That means \"start\" and \"end\" cannot be detected.\n     * 2. Due to damping, `sleep` will usually fire a few seconds after the camera _appears_ to have stopped moving. If you want to do something (e.g. enable UI, perform another transition) at the point when the camera has stopped, you probably want the `rest` event. This can be fine tuned using the `.restThreshold` parameter. See the [Rest and Sleep Example](https://yomotsu.github.io/camera-controls/examples/rest-and-sleep.html).\n     *\n     * e.g.\n     * ```\n     * cameraControl.addEventListener( 'controlstart', myCallbackFunction );\n     * ```\n     * @param type event name\n     * @param listener handler function\n     * @category Methods\n     */\n    addEventListener(type, listener) {\n        super.addEventListener(type, listener);\n    }\n    /**\n     * Removes the specified event listener\n     * e.g.\n     * ```\n     * cameraControl.addEventListener( 'controlstart', myCallbackFunction );\n     * ```\n     * @param type event name\n     * @param listener handler function\n     * @category Methods\n     */\n    removeEventListener(type, listener) {\n        super.removeEventListener(type, listener);\n    }\n    /**\n     * Rotate azimuthal angle(horizontal) and polar angle(vertical).\n     * Every value is added to the current value.\n     * @param azimuthAngle Azimuth rotate angle. In radian.\n     * @param polarAngle Polar rotate angle. In radian.\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    rotate(azimuthAngle, polarAngle, enableTransition = false) {\n        return this.rotateTo(this._sphericalEnd.theta + azimuthAngle, this._sphericalEnd.phi + polarAngle, enableTransition);\n    }\n    /**\n     * Rotate azimuthal angle(horizontal) to the given angle and keep the same polar angle(vertical) target.\n     *\n     * e.g.\n     * ```\n     * cameraControls.rotateAzimuthTo( 30 * THREE.MathUtils.DEG2RAD, true );\n     * ```\n     * @param azimuthAngle Azimuth rotate angle. In radian.\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    rotateAzimuthTo(azimuthAngle, enableTransition = false) {\n        return this.rotateTo(azimuthAngle, this._sphericalEnd.phi, enableTransition);\n    }\n    /**\n     * Rotate polar angle(vertical) to the given angle and keep the same azimuthal angle(horizontal) target.\n     *\n     * e.g.\n     * ```\n     * cameraControls.rotatePolarTo( 30 * THREE.MathUtils.DEG2RAD, true );\n     * ```\n     * @param polarAngle Polar rotate angle. In radian.\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    rotatePolarTo(polarAngle, enableTransition = false) {\n        return this.rotateTo(this._sphericalEnd.theta, polarAngle, enableTransition);\n    }\n    /**\n     * Rotate azimuthal angle(horizontal) and polar angle(vertical) to the given angle.\n     * Camera view will rotate over the orbit pivot absolutely:\n     *\n     * azimuthAngle\n     * ```\n     *       0º\n     *         \\\n     * 90º -----+----- -90º\n     *           \\\n     *           180º\n     * ```\n     * | direction | angle                  |\n     * | --------- | ---------------------- |\n     * | front     | 0º                     |\n     * | left      | 90º (`Math.PI / 2`)    |\n     * | right     | -90º (`- Math.PI / 2`) |\n     * | back      | 180º (`Math.PI`)       |\n     *\n     * polarAngle\n     * ```\n     *     180º\n     *      |\n     *      90º\n     *      |\n     *      0º\n     * ```\n     * | direction            | angle                  |\n     * | -------------------- | ---------------------- |\n     * | top/sky              | 180º (`Math.PI`)       |\n     * | horizontal from view | 90º (`Math.PI / 2`)    |\n     * | bottom/floor         | 0º                     |\n     *\n     * @param azimuthAngle Azimuth rotate angle to. In radian.\n     * @param polarAngle Polar rotate angle to. In radian.\n     * @param enableTransition  Whether to move smoothly or immediately\n     * @category Methods\n     */\n    rotateTo(azimuthAngle, polarAngle, enableTransition = false) {\n        this._isUserControllingRotate = false;\n        const theta = clamp(azimuthAngle, this.minAzimuthAngle, this.maxAzimuthAngle);\n        const phi = clamp(polarAngle, this.minPolarAngle, this.maxPolarAngle);\n        this._sphericalEnd.theta = theta;\n        this._sphericalEnd.phi = phi;\n        this._sphericalEnd.makeSafe();\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._spherical.theta = this._sphericalEnd.theta;\n            this._spherical.phi = this._sphericalEnd.phi;\n        }\n        const resolveImmediately = !enableTransition ||\n            approxEquals(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) &&\n                approxEquals(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Dolly in/out camera position.\n     * @param distance Distance of dollyIn. Negative number for dollyOut.\n     * @param enableTransition Whether to move smoothly or immediately.\n     * @category Methods\n     */\n    dolly(distance, enableTransition = false) {\n        return this.dollyTo(this._sphericalEnd.radius - distance, enableTransition);\n    }\n    /**\n     * Dolly in/out camera position to given distance.\n     * @param distance Distance of dolly.\n     * @param enableTransition Whether to move smoothly or immediately.\n     * @category Methods\n     */\n    dollyTo(distance, enableTransition = false) {\n        this._isUserControllingDolly = false;\n        this._lastDollyDirection = DOLLY_DIRECTION.NONE;\n        this._changedDolly = 0;\n        return this._dollyToNoClamp(clamp(distance, this.minDistance, this.maxDistance), enableTransition);\n    }\n    _dollyToNoClamp(distance, enableTransition = false) {\n        const lastRadius = this._sphericalEnd.radius;\n        const hasCollider = this.colliderMeshes.length >= 1;\n        if (hasCollider) {\n            const maxDistanceByCollisionTest = this._collisionTest();\n            const isCollided = approxEquals(maxDistanceByCollisionTest, this._spherical.radius);\n            const isDollyIn = lastRadius > distance;\n            if (!isDollyIn && isCollided)\n                return Promise.resolve();\n            this._sphericalEnd.radius = Math.min(distance, maxDistanceByCollisionTest);\n        }\n        else {\n            this._sphericalEnd.radius = distance;\n        }\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._spherical.radius = this._sphericalEnd.radius;\n        }\n        const resolveImmediately = !enableTransition || approxEquals(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Dolly in, but does not change the distance between the target and the camera, and moves the target position instead.\n     * Specify a negative value for dolly out.\n     * @param distance Distance of dolly.\n     * @param enableTransition Whether to move smoothly or immediately.\n     * @category Methods\n     */\n    dollyInFixed(distance, enableTransition = false) {\n        this._targetEnd.add(this._getCameraDirection(_cameraDirection).multiplyScalar(distance));\n        if (!enableTransition) {\n            this._target.copy(this._targetEnd);\n        }\n        const resolveImmediately = !enableTransition ||\n            approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) &&\n                approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) &&\n                approxEquals(this._target.z, this._targetEnd.z, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Zoom in/out camera. The value is added to camera zoom.\n     * Limits set with `.minZoom` and `.maxZoom`\n     * @param zoomStep zoom scale\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    zoom(zoomStep, enableTransition = false) {\n        return this.zoomTo(this._zoomEnd + zoomStep, enableTransition);\n    }\n    /**\n     * Zoom in/out camera to given scale. The value overwrites camera zoom.\n     * Limits set with .minZoom and .maxZoom\n     * @param zoom\n     * @param enableTransition\n     * @category Methods\n     */\n    zoomTo(zoom, enableTransition = false) {\n        this._isUserControllingZoom = false;\n        this._zoomEnd = clamp(zoom, this.minZoom, this.maxZoom);\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._zoom = this._zoomEnd;\n        }\n        const resolveImmediately = !enableTransition || approxEquals(this._zoom, this._zoomEnd, this.restThreshold);\n        this._changedZoom = 0;\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * @deprecated `pan()` has been renamed to `truck()`\n     * @category Methods\n     */\n    pan(x, y, enableTransition = false) {\n        console.warn('`pan` has been renamed to `truck`');\n        return this.truck(x, y, enableTransition);\n    }\n    /**\n     * Truck and pedestal camera using current azimuthal angle\n     * @param x Horizontal translate amount\n     * @param y Vertical translate amount\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    truck(x, y, enableTransition = false) {\n        this._camera.updateMatrix();\n        _xColumn.setFromMatrixColumn(this._camera.matrix, 0);\n        _yColumn.setFromMatrixColumn(this._camera.matrix, 1);\n        _xColumn.multiplyScalar(x);\n        _yColumn.multiplyScalar(-y);\n        const offset = _v3A.copy(_xColumn).add(_yColumn);\n        const to = _v3B.copy(this._targetEnd).add(offset);\n        return this.moveTo(to.x, to.y, to.z, enableTransition);\n    }\n    /**\n     * Move forward / backward.\n     * @param distance Amount to move forward / backward. Negative value to move backward\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    forward(distance, enableTransition = false) {\n        _v3A.setFromMatrixColumn(this._camera.matrix, 0);\n        _v3A.crossVectors(this._camera.up, _v3A);\n        _v3A.multiplyScalar(distance);\n        const to = _v3B.copy(this._targetEnd).add(_v3A);\n        return this.moveTo(to.x, to.y, to.z, enableTransition);\n    }\n    /**\n     * Move up / down.\n     * @param height Amount to move up / down. Negative value to move down\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    elevate(height, enableTransition = false) {\n        _v3A.copy(this._camera.up).multiplyScalar(height);\n        return this.moveTo(this._targetEnd.x + _v3A.x, this._targetEnd.y + _v3A.y, this._targetEnd.z + _v3A.z, enableTransition);\n    }\n    /**\n     * Move target position to given point.\n     * @param x x coord to move center position\n     * @param y y coord to move center position\n     * @param z z coord to move center position\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    moveTo(x, y, z, enableTransition = false) {\n        this._isUserControllingTruck = false;\n        const offset = _v3A.set(x, y, z).sub(this._targetEnd);\n        this._encloseToBoundary(this._targetEnd, offset, this.boundaryFriction);\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._target.copy(this._targetEnd);\n        }\n        const resolveImmediately = !enableTransition ||\n            approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) &&\n                approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) &&\n                approxEquals(this._target.z, this._targetEnd.z, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Look in the given point direction.\n     * @param x point x.\n     * @param y point y.\n     * @param z point z.\n     * @param enableTransition Whether to move smoothly or immediately.\n     * @returns Transition end promise\n     * @category Methods\n     */\n    lookInDirectionOf(x, y, z, enableTransition = false) {\n        const point = _v3A.set(x, y, z);\n        const direction = point.sub(this._targetEnd).normalize();\n        const position = direction.multiplyScalar(-this._sphericalEnd.radius);\n        return this.setPosition(position.x, position.y, position.z, enableTransition);\n    }\n    /**\n     * Fit the viewport to the box or the bounding box of the object, using the nearest axis. paddings are in unit.\n     * set `cover: true` to fill enter screen.\n     * e.g.\n     * ```\n     * cameraControls.fitToBox( myMesh );\n     * ```\n     * @param box3OrObject Axis aligned bounding box to fit the view.\n     * @param enableTransition Whether to move smoothly or immediately.\n     * @param options | `<object>` { cover: boolean, paddingTop: number, paddingLeft: number, paddingBottom: number, paddingRight: number }\n     * @returns Transition end promise\n     * @category Methods\n     */\n    fitToBox(box3OrObject, enableTransition, { cover = false, paddingLeft = 0, paddingRight = 0, paddingBottom = 0, paddingTop = 0 } = {}) {\n        const promises = [];\n        const aabb = box3OrObject.isBox3\n            ? _box3A.copy(box3OrObject)\n            : _box3A.setFromObject(box3OrObject);\n        if (aabb.isEmpty()) {\n            console.warn('camera-controls: fitTo() cannot be used with an empty box. Aborting');\n            Promise.resolve();\n        }\n        // round to closest axis ( forward | backward | right | left | top | bottom )\n        const theta = roundToStep(this._sphericalEnd.theta, PI_HALF);\n        const phi = roundToStep(this._sphericalEnd.phi, PI_HALF);\n        promises.push(this.rotateTo(theta, phi, enableTransition));\n        const normal = _v3A.setFromSpherical(this._sphericalEnd).normalize();\n        const rotation = _quaternionA.setFromUnitVectors(normal, _AXIS_Z);\n        const viewFromPolar = approxEquals(Math.abs(normal.y), 1);\n        if (viewFromPolar) {\n            rotation.multiply(_quaternionB.setFromAxisAngle(_AXIS_Y, theta));\n        }\n        rotation.multiply(this._yAxisUpSpaceInverse);\n        // make oriented bounding box\n        const bb = _box3B.makeEmpty();\n        // left bottom back corner\n        _v3B.copy(aabb.min).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // right bottom back corner\n        _v3B.copy(aabb.min).setX(aabb.max.x).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // left top back corner\n        _v3B.copy(aabb.min).setY(aabb.max.y).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // right top back corner\n        _v3B.copy(aabb.max).setZ(aabb.min.z).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // left bottom front corner\n        _v3B.copy(aabb.min).setZ(aabb.max.z).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // right bottom front corner\n        _v3B.copy(aabb.max).setY(aabb.min.y).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // left top front corner\n        _v3B.copy(aabb.max).setX(aabb.min.x).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // right top front corner\n        _v3B.copy(aabb.max).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // add padding\n        bb.min.x -= paddingLeft;\n        bb.min.y -= paddingBottom;\n        bb.max.x += paddingRight;\n        bb.max.y += paddingTop;\n        rotation.setFromUnitVectors(_AXIS_Z, normal);\n        if (viewFromPolar) {\n            rotation.premultiply(_quaternionB.invert());\n        }\n        rotation.premultiply(this._yAxisUpSpace);\n        const bbSize = bb.getSize(_v3A);\n        const center = bb.getCenter(_v3B).applyQuaternion(rotation);\n        if (isPerspectiveCamera(this._camera)) {\n            const distance = this.getDistanceToFitBox(bbSize.x, bbSize.y, bbSize.z, cover);\n            promises.push(this.moveTo(center.x, center.y, center.z, enableTransition));\n            promises.push(this.dollyTo(distance, enableTransition));\n            promises.push(this.setFocalOffset(0, 0, 0, enableTransition));\n        }\n        else if (isOrthographicCamera(this._camera)) {\n            const camera = this._camera;\n            const width = camera.right - camera.left;\n            const height = camera.top - camera.bottom;\n            const zoom = cover ? Math.max(width / bbSize.x, height / bbSize.y) : Math.min(width / bbSize.x, height / bbSize.y);\n            promises.push(this.moveTo(center.x, center.y, center.z, enableTransition));\n            promises.push(this.zoomTo(zoom, enableTransition));\n            promises.push(this.setFocalOffset(0, 0, 0, enableTransition));\n        }\n        return Promise.all(promises);\n    }\n    /**\n     * Fit the viewport to the sphere or the bounding sphere of the object.\n     * @param sphereOrMesh\n     * @param enableTransition\n     * @category Methods\n     */\n    fitToSphere(sphereOrMesh, enableTransition) {\n        const promises = [];\n        const isSphere = sphereOrMesh instanceof THREE.Sphere;\n        const boundingSphere = isSphere ?\n            _sphere.copy(sphereOrMesh) :\n            CameraControls.createBoundingSphere(sphereOrMesh, _sphere);\n        promises.push(this.moveTo(boundingSphere.center.x, boundingSphere.center.y, boundingSphere.center.z, enableTransition));\n        if (isPerspectiveCamera(this._camera)) {\n            const distanceToFit = this.getDistanceToFitSphere(boundingSphere.radius);\n            promises.push(this.dollyTo(distanceToFit, enableTransition));\n        }\n        else if (isOrthographicCamera(this._camera)) {\n            const width = this._camera.right - this._camera.left;\n            const height = this._camera.top - this._camera.bottom;\n            const diameter = 2 * boundingSphere.radius;\n            const zoom = Math.min(width / diameter, height / diameter);\n            promises.push(this.zoomTo(zoom, enableTransition));\n        }\n        promises.push(this.setFocalOffset(0, 0, 0, enableTransition));\n        return Promise.all(promises);\n    }\n    /**\n     * Look at the `target` from the `position`.\n     * @param positionX\n     * @param positionY\n     * @param positionZ\n     * @param targetX\n     * @param targetY\n     * @param targetZ\n     * @param enableTransition\n     * @category Methods\n     */\n    setLookAt(positionX, positionY, positionZ, targetX, targetY, targetZ, enableTransition = false) {\n        this._isUserControllingRotate = false;\n        this._isUserControllingDolly = false;\n        this._isUserControllingTruck = false;\n        this._lastDollyDirection = DOLLY_DIRECTION.NONE;\n        this._changedDolly = 0;\n        const target = _v3B.set(targetX, targetY, targetZ);\n        const position = _v3A.set(positionX, positionY, positionZ);\n        this._targetEnd.copy(target);\n        this._sphericalEnd.setFromVector3(position.sub(target).applyQuaternion(this._yAxisUpSpace));\n        this.normalizeRotations();\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._target.copy(this._targetEnd);\n            this._spherical.copy(this._sphericalEnd);\n        }\n        const resolveImmediately = !enableTransition ||\n            approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) &&\n                approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) &&\n                approxEquals(this._target.z, this._targetEnd.z, this.restThreshold) &&\n                approxEquals(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) &&\n                approxEquals(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold) &&\n                approxEquals(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Similar to setLookAt, but it interpolates between two states.\n     * @param positionAX\n     * @param positionAY\n     * @param positionAZ\n     * @param targetAX\n     * @param targetAY\n     * @param targetAZ\n     * @param positionBX\n     * @param positionBY\n     * @param positionBZ\n     * @param targetBX\n     * @param targetBY\n     * @param targetBZ\n     * @param t\n     * @param enableTransition\n     * @category Methods\n     */\n    lerpLookAt(positionAX, positionAY, positionAZ, targetAX, targetAY, targetAZ, positionBX, positionBY, positionBZ, targetBX, targetBY, targetBZ, t, enableTransition = false) {\n        this._isUserControllingRotate = false;\n        this._isUserControllingDolly = false;\n        this._isUserControllingTruck = false;\n        this._lastDollyDirection = DOLLY_DIRECTION.NONE;\n        this._changedDolly = 0;\n        const targetA = _v3A.set(targetAX, targetAY, targetAZ);\n        const positionA = _v3B.set(positionAX, positionAY, positionAZ);\n        _sphericalA.setFromVector3(positionA.sub(targetA).applyQuaternion(this._yAxisUpSpace));\n        const targetB = _v3C.set(targetBX, targetBY, targetBZ);\n        const positionB = _v3B.set(positionBX, positionBY, positionBZ);\n        _sphericalB.setFromVector3(positionB.sub(targetB).applyQuaternion(this._yAxisUpSpace));\n        this._targetEnd.copy(targetA.lerp(targetB, t)); // tricky\n        const deltaTheta = _sphericalB.theta - _sphericalA.theta;\n        const deltaPhi = _sphericalB.phi - _sphericalA.phi;\n        const deltaRadius = _sphericalB.radius - _sphericalA.radius;\n        this._sphericalEnd.set(_sphericalA.radius + deltaRadius * t, _sphericalA.phi + deltaPhi * t, _sphericalA.theta + deltaTheta * t);\n        this.normalizeRotations();\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._target.copy(this._targetEnd);\n            this._spherical.copy(this._sphericalEnd);\n        }\n        const resolveImmediately = !enableTransition ||\n            approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) &&\n                approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) &&\n                approxEquals(this._target.z, this._targetEnd.z, this.restThreshold) &&\n                approxEquals(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) &&\n                approxEquals(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold) &&\n                approxEquals(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Set angle and distance by given position.\n     * An alias of `setLookAt()`, without target change. Thus keep gazing at the current target\n     * @param positionX\n     * @param positionY\n     * @param positionZ\n     * @param enableTransition\n     * @category Methods\n     */\n    setPosition(positionX, positionY, positionZ, enableTransition = false) {\n        return this.setLookAt(positionX, positionY, positionZ, this._targetEnd.x, this._targetEnd.y, this._targetEnd.z, enableTransition);\n    }\n    /**\n     * Set the target position where gaze at.\n     * An alias of `setLookAt()`, without position change. Thus keep the same position.\n     * @param targetX\n     * @param targetY\n     * @param targetZ\n     * @param enableTransition\n     * @category Methods\n     */\n    setTarget(targetX, targetY, targetZ, enableTransition = false) {\n        const pos = this.getPosition(_v3A);\n        const promise = this.setLookAt(pos.x, pos.y, pos.z, targetX, targetY, targetZ, enableTransition);\n        // see https://github.com/yomotsu/camera-controls/issues/335\n        this._sphericalEnd.phi = clamp(this._sphericalEnd.phi, this.minPolarAngle, this.maxPolarAngle);\n        return promise;\n    }\n    /**\n     * Set focal offset using the screen parallel coordinates. z doesn't affect in Orthographic as with Dolly.\n     * @param x\n     * @param y\n     * @param z\n     * @param enableTransition\n     * @category Methods\n     */\n    setFocalOffset(x, y, z, enableTransition = false) {\n        this._isUserControllingOffset = false;\n        this._focalOffsetEnd.set(x, y, z);\n        this._needsUpdate = true;\n        if (!enableTransition)\n            this._focalOffset.copy(this._focalOffsetEnd);\n        const resolveImmediately = !enableTransition ||\n            approxEquals(this._focalOffset.x, this._focalOffsetEnd.x, this.restThreshold) &&\n                approxEquals(this._focalOffset.y, this._focalOffsetEnd.y, this.restThreshold) &&\n                approxEquals(this._focalOffset.z, this._focalOffsetEnd.z, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Set orbit point without moving the camera.\n     * SHOULD NOT RUN DURING ANIMATIONS. `setOrbitPoint()` will immediately fix the positions.\n     * @param targetX\n     * @param targetY\n     * @param targetZ\n     * @category Methods\n     */\n    setOrbitPoint(targetX, targetY, targetZ) {\n        this._camera.updateMatrixWorld();\n        _xColumn.setFromMatrixColumn(this._camera.matrixWorldInverse, 0);\n        _yColumn.setFromMatrixColumn(this._camera.matrixWorldInverse, 1);\n        _zColumn.setFromMatrixColumn(this._camera.matrixWorldInverse, 2);\n        const position = _v3A.set(targetX, targetY, targetZ);\n        const distance = position.distanceTo(this._camera.position);\n        const cameraToPoint = position.sub(this._camera.position);\n        _xColumn.multiplyScalar(cameraToPoint.x);\n        _yColumn.multiplyScalar(cameraToPoint.y);\n        _zColumn.multiplyScalar(cameraToPoint.z);\n        _v3A.copy(_xColumn).add(_yColumn).add(_zColumn);\n        _v3A.z = _v3A.z + distance;\n        this.dollyTo(distance, false);\n        this.setFocalOffset(-_v3A.x, _v3A.y, -_v3A.z, false);\n        this.moveTo(targetX, targetY, targetZ, false);\n    }\n    /**\n     * Set the boundary box that encloses the target of the camera. box3 is in THREE.Box3\n     * @param box3\n     * @category Methods\n     */\n    setBoundary(box3) {\n        if (!box3) {\n            this._boundary.min.set(-Infinity, -Infinity, -Infinity);\n            this._boundary.max.set(Infinity, Infinity, Infinity);\n            this._needsUpdate = true;\n            return;\n        }\n        this._boundary.copy(box3);\n        this._boundary.clampPoint(this._targetEnd, this._targetEnd);\n        this._needsUpdate = true;\n    }\n    /**\n     * Set (or unset) the current viewport.\n     * Set this when you want to use renderer viewport and .dollyToCursor feature at the same time.\n     * @param viewportOrX\n     * @param y\n     * @param width\n     * @param height\n     * @category Methods\n     */\n    setViewport(viewportOrX, y, width, height) {\n        if (viewportOrX === null) { // null\n            this._viewport = null;\n            return;\n        }\n        this._viewport = this._viewport || new THREE.Vector4();\n        if (typeof viewportOrX === 'number') { // number\n            this._viewport.set(viewportOrX, y, width, height);\n        }\n        else { // Vector4\n            this._viewport.copy(viewportOrX);\n        }\n    }\n    /**\n     * Calculate the distance to fit the box.\n     * @param width box width\n     * @param height box height\n     * @param depth box depth\n     * @returns distance\n     * @category Methods\n     */\n    getDistanceToFitBox(width, height, depth, cover = false) {\n        if (notSupportedInOrthographicCamera(this._camera, 'getDistanceToFitBox'))\n            return this._spherical.radius;\n        const boundingRectAspect = width / height;\n        const fov = this._camera.getEffectiveFOV() * DEG2RAD;\n        const aspect = this._camera.aspect;\n        const heightToFit = (cover ? boundingRectAspect > aspect : boundingRectAspect < aspect) ? height : width / aspect;\n        return heightToFit * 0.5 / Math.tan(fov * 0.5) + depth * 0.5;\n    }\n    /**\n     * Calculate the distance to fit the sphere.\n     * @param radius sphere radius\n     * @returns distance\n     * @category Methods\n     */\n    getDistanceToFitSphere(radius) {\n        if (notSupportedInOrthographicCamera(this._camera, 'getDistanceToFitSphere'))\n            return this._spherical.radius;\n        // https://stackoverflow.com/a/44849975\n        const vFOV = this._camera.getEffectiveFOV() * DEG2RAD;\n        const hFOV = Math.atan(Math.tan(vFOV * 0.5) * this._camera.aspect) * 2;\n        const fov = 1 < this._camera.aspect ? vFOV : hFOV;\n        return radius / (Math.sin(fov * 0.5));\n    }\n    /**\n     * Returns the orbit center position, where the camera looking at.\n     * @param out The receiving Vector3 instance to copy the result\n     * @param receiveEndValue Whether receive the transition end coords or current. default is `true`\n     * @category Methods\n     */\n    getTarget(out, receiveEndValue = true) {\n        const _out = !!out && out.isVector3 ? out : new THREE.Vector3();\n        return _out.copy(receiveEndValue ? this._targetEnd : this._target);\n    }\n    /**\n     * Returns the camera position.\n     * @param out The receiving Vector3 instance to copy the result\n     * @param receiveEndValue Whether receive the transition end coords or current. default is `true`\n     * @category Methods\n     */\n    getPosition(out, receiveEndValue = true) {\n        const _out = !!out && out.isVector3 ? out : new THREE.Vector3();\n        return _out.setFromSpherical(receiveEndValue ? this._sphericalEnd : this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(receiveEndValue ? this._targetEnd : this._target);\n    }\n    /**\n     * Returns the spherical coordinates of the orbit.\n     * @param out The receiving Spherical instance to copy the result\n     * @param receiveEndValue Whether receive the transition end coords or current. default is `true`\n     * @category Methods\n     */\n    getSpherical(out, receiveEndValue = true) {\n        const _out = !!out && out instanceof THREE.Spherical ? out : new THREE.Spherical();\n        return _out.copy(receiveEndValue ? this._sphericalEnd : this._spherical);\n    }\n    /**\n     * Returns the focal offset, which is how much the camera appears to be translated in screen parallel coordinates.\n     * @param out The receiving Vector3 instance to copy the result\n     * @param receiveEndValue Whether receive the transition end coords or current. default is `true`\n     * @category Methods\n     */\n    getFocalOffset(out, receiveEndValue = true) {\n        const _out = !!out && out.isVector3 ? out : new THREE.Vector3();\n        return _out.copy(receiveEndValue ? this._focalOffsetEnd : this._focalOffset);\n    }\n    /**\n     * Normalize camera azimuth angle rotation between 0 and 360 degrees.\n     * @category Methods\n     */\n    normalizeRotations() {\n        this._sphericalEnd.theta = this._sphericalEnd.theta % PI_2;\n        if (this._sphericalEnd.theta < 0)\n            this._sphericalEnd.theta += PI_2;\n        this._spherical.theta += PI_2 * Math.round((this._sphericalEnd.theta - this._spherical.theta) / PI_2);\n    }\n    /**\n     * Reset all rotation and position to defaults.\n     * @param enableTransition\n     * @category Methods\n     */\n    reset(enableTransition = false) {\n        if (!approxEquals(this._camera.up.x, this._cameraUp0.x) ||\n            !approxEquals(this._camera.up.y, this._cameraUp0.y) ||\n            !approxEquals(this._camera.up.z, this._cameraUp0.z)) {\n            this._camera.up.copy(this._cameraUp0);\n            const position = this.getPosition(_v3A);\n            this.updateCameraUp();\n            this.setPosition(position.x, position.y, position.z);\n        }\n        const promises = [\n            this.setLookAt(this._position0.x, this._position0.y, this._position0.z, this._target0.x, this._target0.y, this._target0.z, enableTransition),\n            this.setFocalOffset(this._focalOffset0.x, this._focalOffset0.y, this._focalOffset0.z, enableTransition),\n            this.zoomTo(this._zoom0, enableTransition),\n        ];\n        return Promise.all(promises);\n    }\n    /**\n     * Set current camera position as the default position.\n     * @category Methods\n     */\n    saveState() {\n        this._cameraUp0.copy(this._camera.up);\n        this.getTarget(this._target0);\n        this.getPosition(this._position0);\n        this._zoom0 = this._zoom;\n        this._focalOffset0.copy(this._focalOffset);\n    }\n    /**\n     * Sync camera-up direction.\n     * When camera-up vector is changed, `.updateCameraUp()` must be called.\n     * @category Methods\n     */\n    updateCameraUp() {\n        this._yAxisUpSpace.setFromUnitVectors(this._camera.up, _AXIS_Y);\n        this._yAxisUpSpaceInverse.copy(this._yAxisUpSpace).invert();\n    }\n    /**\n     * Apply current camera-up direction to the camera.\n     * The orbit system will be re-initialized with the current position.\n     * @category Methods\n     */\n    applyCameraUp() {\n        const cameraDirection = _v3A.subVectors(this._target, this._camera.position).normalize();\n        // So first find the vector off to the side, orthogonal to both this.object.up and\n        // the \"view\" vector.\n        const side = _v3B.crossVectors(cameraDirection, this._camera.up);\n        // Then find the vector orthogonal to both this \"side\" vector and the \"view\" vector.\n        // This vector will be the new \"up\" vector.\n        this._camera.up.crossVectors(side, cameraDirection).normalize();\n        this._camera.updateMatrixWorld();\n        const position = this.getPosition(_v3A);\n        this.updateCameraUp();\n        this.setPosition(position.x, position.y, position.z);\n    }\n    /**\n     * Update camera position and directions.\n     * This should be called in your tick loop every time, and returns true if re-rendering is needed.\n     * @param delta\n     * @returns updated\n     * @category Methods\n     */\n    update(delta) {\n        const deltaTheta = this._sphericalEnd.theta - this._spherical.theta;\n        const deltaPhi = this._sphericalEnd.phi - this._spherical.phi;\n        const deltaRadius = this._sphericalEnd.radius - this._spherical.radius;\n        const deltaTarget = _deltaTarget.subVectors(this._targetEnd, this._target);\n        const deltaOffset = _deltaOffset.subVectors(this._focalOffsetEnd, this._focalOffset);\n        const deltaZoom = this._zoomEnd - this._zoom;\n        // update theta\n        if (approxZero(deltaTheta)) {\n            this._thetaVelocity.value = 0;\n            this._spherical.theta = this._sphericalEnd.theta;\n        }\n        else {\n            const smoothTime = this._isUserControllingRotate ? this.draggingSmoothTime : this.smoothTime;\n            this._spherical.theta = smoothDamp(this._spherical.theta, this._sphericalEnd.theta, this._thetaVelocity, smoothTime, Infinity, delta);\n            this._needsUpdate = true;\n        }\n        // update phi\n        if (approxZero(deltaPhi)) {\n            this._phiVelocity.value = 0;\n            this._spherical.phi = this._sphericalEnd.phi;\n        }\n        else {\n            const smoothTime = this._isUserControllingRotate ? this.draggingSmoothTime : this.smoothTime;\n            this._spherical.phi = smoothDamp(this._spherical.phi, this._sphericalEnd.phi, this._phiVelocity, smoothTime, Infinity, delta);\n            this._needsUpdate = true;\n        }\n        // update distance\n        if (approxZero(deltaRadius)) {\n            this._radiusVelocity.value = 0;\n            this._spherical.radius = this._sphericalEnd.radius;\n        }\n        else {\n            const smoothTime = this._isUserControllingDolly ? this.draggingSmoothTime : this.smoothTime;\n            this._spherical.radius = smoothDamp(this._spherical.radius, this._sphericalEnd.radius, this._radiusVelocity, smoothTime, this.maxSpeed, delta);\n            this._needsUpdate = true;\n        }\n        // update target position\n        if (approxZero(deltaTarget.x) && approxZero(deltaTarget.y) && approxZero(deltaTarget.z)) {\n            this._targetVelocity.set(0, 0, 0);\n            this._target.copy(this._targetEnd);\n        }\n        else {\n            const smoothTime = this._isUserControllingTruck ? this.draggingSmoothTime : this.smoothTime;\n            smoothDampVec3(this._target, this._targetEnd, this._targetVelocity, smoothTime, this.maxSpeed, delta, this._target);\n            this._needsUpdate = true;\n        }\n        // update focalOffset\n        if (approxZero(deltaOffset.x) && approxZero(deltaOffset.y) && approxZero(deltaOffset.z)) {\n            this._focalOffsetVelocity.set(0, 0, 0);\n            this._focalOffset.copy(this._focalOffsetEnd);\n        }\n        else {\n            const smoothTime = this._isUserControllingOffset ? this.draggingSmoothTime : this.smoothTime;\n            smoothDampVec3(this._focalOffset, this._focalOffsetEnd, this._focalOffsetVelocity, smoothTime, this.maxSpeed, delta, this._focalOffset);\n            this._needsUpdate = true;\n        }\n        // update zoom\n        if (approxZero(deltaZoom)) {\n            this._zoomVelocity.value = 0;\n            this._zoom = this._zoomEnd;\n        }\n        else {\n            const smoothTime = this._isUserControllingZoom ? this.draggingSmoothTime : this.smoothTime;\n            this._zoom = smoothDamp(this._zoom, this._zoomEnd, this._zoomVelocity, smoothTime, Infinity, delta);\n        }\n        if (this.dollyToCursor) {\n            if (isPerspectiveCamera(this._camera) && this._changedDolly !== 0) {\n                const dollyControlAmount = this._spherical.radius - this._lastDistance;\n                const camera = this._camera;\n                const cameraDirection = this._getCameraDirection(_cameraDirection);\n                const planeX = _v3A.copy(cameraDirection).cross(camera.up).normalize();\n                if (planeX.lengthSq() === 0)\n                    planeX.x = 1.0;\n                const planeY = _v3B.crossVectors(planeX, cameraDirection);\n                const worldToScreen = this._sphericalEnd.radius * Math.tan(camera.getEffectiveFOV() * DEG2RAD * 0.5);\n                const prevRadius = this._sphericalEnd.radius - dollyControlAmount;\n                const lerpRatio = (prevRadius - this._sphericalEnd.radius) / this._sphericalEnd.radius;\n                const cursor = _v3C.copy(this._targetEnd)\n                    .add(planeX.multiplyScalar(this._dollyControlCoord.x * worldToScreen * camera.aspect))\n                    .add(planeY.multiplyScalar(this._dollyControlCoord.y * worldToScreen));\n                const newTargetEnd = _v3A.copy(this._targetEnd).lerp(cursor, lerpRatio);\n                const isMin = this._lastDollyDirection === DOLLY_DIRECTION.IN && this._spherical.radius <= this.minDistance;\n                const isMax = this._lastDollyDirection === DOLLY_DIRECTION.OUT && this.maxDistance <= this._spherical.radius;\n                if (this.infinityDolly && (isMin || isMax)) {\n                    this._sphericalEnd.radius -= dollyControlAmount;\n                    this._spherical.radius -= dollyControlAmount;\n                    const dollyAmount = _v3B.copy(cameraDirection).multiplyScalar(-dollyControlAmount);\n                    newTargetEnd.add(dollyAmount);\n                }\n                // target position may be moved beyond boundary.\n                this._boundary.clampPoint(newTargetEnd, newTargetEnd);\n                const targetEndDiff = _v3B.subVectors(newTargetEnd, this._targetEnd);\n                this._targetEnd.copy(newTargetEnd);\n                this._target.add(targetEndDiff);\n                this._changedDolly -= dollyControlAmount;\n                if (approxZero(this._changedDolly))\n                    this._changedDolly = 0;\n            }\n            else if (isOrthographicCamera(this._camera) && this._changedZoom !== 0) {\n                const dollyControlAmount = this._zoom - this._lastZoom;\n                const camera = this._camera;\n                const worldCursorPosition = _v3A.set(this._dollyControlCoord.x, this._dollyControlCoord.y, (camera.near + camera.far) / (camera.near - camera.far)).unproject(camera);\n                const quaternion = _v3B.set(0, 0, -1).applyQuaternion(camera.quaternion);\n                const cursor = _v3C.copy(worldCursorPosition).add(quaternion.multiplyScalar(-worldCursorPosition.dot(camera.up)));\n                const prevZoom = this._zoom - dollyControlAmount;\n                const lerpRatio = -(prevZoom - this._zoom) / this._zoom;\n                // find the \"distance\" (aka plane constant in three.js) of Plane\n                // from a given position (this._targetEnd) and normal vector (cameraDirection)\n                // https://www.maplesoft.com/support/help/maple/view.aspx?path=MathApps%2FEquationOfAPlaneNormal#bkmrk0\n                const cameraDirection = this._getCameraDirection(_cameraDirection);\n                const prevPlaneConstant = this._targetEnd.dot(cameraDirection);\n                const newTargetEnd = _v3A.copy(this._targetEnd).lerp(cursor, lerpRatio);\n                const newPlaneConstant = newTargetEnd.dot(cameraDirection);\n                // Pull back the camera depth that has moved, to be the camera stationary as zoom\n                const pullBack = cameraDirection.multiplyScalar(newPlaneConstant - prevPlaneConstant);\n                newTargetEnd.sub(pullBack);\n                // target position may be moved beyond boundary.\n                this._boundary.clampPoint(newTargetEnd, newTargetEnd);\n                const targetEndDiff = _v3B.subVectors(newTargetEnd, this._targetEnd);\n                this._targetEnd.copy(newTargetEnd);\n                this._target.add(targetEndDiff);\n                // this._target.copy( this._targetEnd );\n                this._changedZoom -= dollyControlAmount;\n                if (approxZero(this._changedZoom))\n                    this._changedZoom = 0;\n            }\n        }\n        if (this._camera.zoom !== this._zoom) {\n            this._camera.zoom = this._zoom;\n            this._camera.updateProjectionMatrix();\n            this._updateNearPlaneCorners();\n            this._needsUpdate = true;\n        }\n        this._dragNeedsUpdate = true;\n        // collision detection\n        const maxDistance = this._collisionTest();\n        this._spherical.radius = Math.min(this._spherical.radius, maxDistance);\n        // decompose spherical to the camera position\n        this._spherical.makeSafe();\n        this._camera.position.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(this._target);\n        this._camera.lookAt(this._target);\n        // set offset after the orbit movement\n        const affectOffset = !approxZero(this._focalOffset.x) ||\n            !approxZero(this._focalOffset.y) ||\n            !approxZero(this._focalOffset.z);\n        if (affectOffset) {\n            this._camera.updateMatrixWorld();\n            _xColumn.setFromMatrixColumn(this._camera.matrix, 0);\n            _yColumn.setFromMatrixColumn(this._camera.matrix, 1);\n            _zColumn.setFromMatrixColumn(this._camera.matrix, 2);\n            _xColumn.multiplyScalar(this._focalOffset.x);\n            _yColumn.multiplyScalar(-this._focalOffset.y);\n            _zColumn.multiplyScalar(this._focalOffset.z); // notice: z-offset will not affect in Orthographic.\n            _v3A.copy(_xColumn).add(_yColumn).add(_zColumn);\n            this._camera.position.add(_v3A);\n        }\n        if (this._boundaryEnclosesCamera) {\n            this._encloseToBoundary(this._camera.position.copy(this._target), _v3A.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse), 1.0);\n        }\n        const updated = this._needsUpdate;\n        if (updated && !this._updatedLastTime) {\n            this._hasRested = false;\n            this.dispatchEvent({ type: 'wake' });\n            this.dispatchEvent({ type: 'update' });\n        }\n        else if (updated) {\n            this.dispatchEvent({ type: 'update' });\n            if (approxZero(deltaTheta, this.restThreshold) &&\n                approxZero(deltaPhi, this.restThreshold) &&\n                approxZero(deltaRadius, this.restThreshold) &&\n                approxZero(deltaTarget.x, this.restThreshold) &&\n                approxZero(deltaTarget.y, this.restThreshold) &&\n                approxZero(deltaTarget.z, this.restThreshold) &&\n                approxZero(deltaOffset.x, this.restThreshold) &&\n                approxZero(deltaOffset.y, this.restThreshold) &&\n                approxZero(deltaOffset.z, this.restThreshold) &&\n                approxZero(deltaZoom, this.restThreshold) &&\n                !this._hasRested) {\n                this._hasRested = true;\n                this.dispatchEvent({ type: 'rest' });\n            }\n        }\n        else if (!updated && this._updatedLastTime) {\n            this.dispatchEvent({ type: 'sleep' });\n        }\n        this._lastDistance = this._spherical.radius;\n        this._lastZoom = this._zoom;\n        this._updatedLastTime = updated;\n        this._needsUpdate = false;\n        return updated;\n    }\n    /**\n     * Get all state in JSON string\n     * @category Methods\n     */\n    toJSON() {\n        return JSON.stringify({\n            enabled: this._enabled,\n            minDistance: this.minDistance,\n            maxDistance: infinityToMaxNumber(this.maxDistance),\n            minZoom: this.minZoom,\n            maxZoom: infinityToMaxNumber(this.maxZoom),\n            minPolarAngle: this.minPolarAngle,\n            maxPolarAngle: infinityToMaxNumber(this.maxPolarAngle),\n            minAzimuthAngle: infinityToMaxNumber(this.minAzimuthAngle),\n            maxAzimuthAngle: infinityToMaxNumber(this.maxAzimuthAngle),\n            smoothTime: this.smoothTime,\n            draggingSmoothTime: this.draggingSmoothTime,\n            dollySpeed: this.dollySpeed,\n            truckSpeed: this.truckSpeed,\n            dollyToCursor: this.dollyToCursor,\n            verticalDragToForward: this.verticalDragToForward,\n            target: this._targetEnd.toArray(),\n            position: _v3A.setFromSpherical(this._sphericalEnd).add(this._targetEnd).toArray(),\n            zoom: this._zoomEnd,\n            focalOffset: this._focalOffsetEnd.toArray(),\n            target0: this._target0.toArray(),\n            position0: this._position0.toArray(),\n            zoom0: this._zoom0,\n            focalOffset0: this._focalOffset0.toArray(),\n        });\n    }\n    /**\n     * Reproduce the control state with JSON. enableTransition is where anim or not in a boolean.\n     * @param json\n     * @param enableTransition\n     * @category Methods\n     */\n    fromJSON(json, enableTransition = false) {\n        const obj = JSON.parse(json);\n        this.enabled = obj.enabled;\n        this.minDistance = obj.minDistance;\n        this.maxDistance = maxNumberToInfinity(obj.maxDistance);\n        this.minZoom = obj.minZoom;\n        this.maxZoom = maxNumberToInfinity(obj.maxZoom);\n        this.minPolarAngle = obj.minPolarAngle;\n        this.maxPolarAngle = maxNumberToInfinity(obj.maxPolarAngle);\n        this.minAzimuthAngle = maxNumberToInfinity(obj.minAzimuthAngle);\n        this.maxAzimuthAngle = maxNumberToInfinity(obj.maxAzimuthAngle);\n        this.smoothTime = obj.smoothTime;\n        this.draggingSmoothTime = obj.draggingSmoothTime;\n        this.dollySpeed = obj.dollySpeed;\n        this.truckSpeed = obj.truckSpeed;\n        this.dollyToCursor = obj.dollyToCursor;\n        this.verticalDragToForward = obj.verticalDragToForward;\n        this._target0.fromArray(obj.target0);\n        this._position0.fromArray(obj.position0);\n        this._zoom0 = obj.zoom0;\n        this._focalOffset0.fromArray(obj.focalOffset0);\n        this.moveTo(obj.target[0], obj.target[1], obj.target[2], enableTransition);\n        _sphericalA.setFromVector3(_v3A.fromArray(obj.position).sub(this._targetEnd).applyQuaternion(this._yAxisUpSpace));\n        this.rotateTo(_sphericalA.theta, _sphericalA.phi, enableTransition);\n        this.dollyTo(_sphericalA.radius, enableTransition);\n        this.zoomTo(obj.zoom, enableTransition);\n        this.setFocalOffset(obj.focalOffset[0], obj.focalOffset[1], obj.focalOffset[2], enableTransition);\n        this._needsUpdate = true;\n    }\n    /**\n     * Attach all internal event handlers to enable drag control.\n     * @category Methods\n     */\n    connect(domElement) {\n        if (this._domElement) {\n            console.warn('camera-controls is already connected.');\n            return;\n        }\n        domElement.setAttribute('data-camera-controls-version', VERSION);\n        this._addAllEventListeners(domElement);\n        this._getClientRect(this._elementRect);\n    }\n    /**\n     * Detach all internal event handlers to disable drag control.\n     */\n    disconnect() {\n        this.cancel();\n        this._removeAllEventListeners();\n        if (this._domElement) {\n            this._domElement.removeAttribute('data-camera-controls-version');\n            this._domElement = undefined;\n        }\n    }\n    /**\n     * Dispose the cameraControls instance itself, remove all eventListeners.\n     * @category Methods\n     */\n    dispose() {\n        // remove all user event listeners\n        this.removeAllEventListeners();\n        // remove all internal event listeners\n        this.disconnect();\n    }\n    // it's okay to expose public though\n    _getTargetDirection(out) {\n        // divide by distance to normalize, lighter than `Vector3.prototype.normalize()`\n        return out.setFromSpherical(this._spherical).divideScalar(this._spherical.radius).applyQuaternion(this._yAxisUpSpaceInverse);\n    }\n    // it's okay to expose public though\n    _getCameraDirection(out) {\n        return this._getTargetDirection(out).negate();\n    }\n    _findPointerById(pointerId) {\n        return this._activePointers.find((activePointer) => activePointer.pointerId === pointerId);\n    }\n    _findPointerByMouseButton(mouseButton) {\n        return this._activePointers.find((activePointer) => activePointer.mouseButton === mouseButton);\n    }\n    _disposePointer(pointer) {\n        this._activePointers.splice(this._activePointers.indexOf(pointer), 1);\n    }\n    _encloseToBoundary(position, offset, friction) {\n        const offsetLength2 = offset.lengthSq();\n        if (offsetLength2 === 0.0) { // sanity check\n            return position;\n        }\n        // See: https://twitter.com/FMS_Cat/status/1106508958640988161\n        const newTarget = _v3B.copy(offset).add(position); // target\n        const clampedTarget = this._boundary.clampPoint(newTarget, _v3C); // clamped target\n        const deltaClampedTarget = clampedTarget.sub(newTarget); // newTarget -> clampedTarget\n        const deltaClampedTargetLength2 = deltaClampedTarget.lengthSq(); // squared length of deltaClampedTarget\n        if (deltaClampedTargetLength2 === 0.0) { // when the position doesn't have to be clamped\n            return position.add(offset);\n        }\n        else if (deltaClampedTargetLength2 === offsetLength2) { // when the position is completely stuck\n            return position;\n        }\n        else if (friction === 0.0) {\n            return position.add(offset).add(deltaClampedTarget);\n        }\n        else {\n            const offsetFactor = 1.0 + friction * deltaClampedTargetLength2 / offset.dot(deltaClampedTarget);\n            return position\n                .add(_v3B.copy(offset).multiplyScalar(offsetFactor))\n                .add(deltaClampedTarget.multiplyScalar(1.0 - friction));\n        }\n    }\n    _updateNearPlaneCorners() {\n        if (isPerspectiveCamera(this._camera)) {\n            const camera = this._camera;\n            const near = camera.near;\n            const fov = camera.getEffectiveFOV() * DEG2RAD;\n            const heightHalf = Math.tan(fov * 0.5) * near; // near plain half height\n            const widthHalf = heightHalf * camera.aspect; // near plain half width\n            this._nearPlaneCorners[0].set(-widthHalf, -heightHalf, 0);\n            this._nearPlaneCorners[1].set(widthHalf, -heightHalf, 0);\n            this._nearPlaneCorners[2].set(widthHalf, heightHalf, 0);\n            this._nearPlaneCorners[3].set(-widthHalf, heightHalf, 0);\n        }\n        else if (isOrthographicCamera(this._camera)) {\n            const camera = this._camera;\n            const zoomInv = 1 / camera.zoom;\n            const left = camera.left * zoomInv;\n            const right = camera.right * zoomInv;\n            const top = camera.top * zoomInv;\n            const bottom = camera.bottom * zoomInv;\n            this._nearPlaneCorners[0].set(left, top, 0);\n            this._nearPlaneCorners[1].set(right, top, 0);\n            this._nearPlaneCorners[2].set(right, bottom, 0);\n            this._nearPlaneCorners[3].set(left, bottom, 0);\n        }\n    }\n    // lateUpdate\n    _collisionTest() {\n        let distance = Infinity;\n        const hasCollider = this.colliderMeshes.length >= 1;\n        if (!hasCollider)\n            return distance;\n        if (notSupportedInOrthographicCamera(this._camera, '_collisionTest'))\n            return distance;\n        const rayDirection = this._getTargetDirection(_cameraDirection);\n        _rotationMatrix.lookAt(_ORIGIN, rayDirection, this._camera.up);\n        for (let i = 0; i < 4; i++) {\n            const nearPlaneCorner = _v3B.copy(this._nearPlaneCorners[i]);\n            nearPlaneCorner.applyMatrix4(_rotationMatrix);\n            const origin = _v3C.addVectors(this._target, nearPlaneCorner);\n            _raycaster.set(origin, rayDirection);\n            _raycaster.far = this._spherical.radius + 1;\n            const intersects = _raycaster.intersectObjects(this.colliderMeshes);\n            if (intersects.length !== 0 && intersects[0].distance < distance) {\n                distance = intersects[0].distance;\n            }\n        }\n        return distance;\n    }\n    /**\n     * Get its client rect and package into given `DOMRect` .\n     */\n    _getClientRect(target) {\n        if (!this._domElement)\n            return;\n        const rect = this._domElement.getBoundingClientRect();\n        target.x = rect.left;\n        target.y = rect.top;\n        if (this._viewport) {\n            target.x += this._viewport.x;\n            target.y += rect.height - this._viewport.w - this._viewport.y;\n            target.width = this._viewport.z;\n            target.height = this._viewport.w;\n        }\n        else {\n            target.width = rect.width;\n            target.height = rect.height;\n        }\n        return target;\n    }\n    _createOnRestPromise(resolveImmediately) {\n        if (resolveImmediately)\n            return Promise.resolve();\n        this._hasRested = false;\n        this.dispatchEvent({ type: 'transitionstart' });\n        return new Promise((resolve) => {\n            const onResolve = () => {\n                this.removeEventListener('rest', onResolve);\n                resolve();\n            };\n            this.addEventListener('rest', onResolve);\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _addAllEventListeners(_domElement) { }\n    _removeAllEventListeners() { }\n    /**\n     * backward compatible\n     * @deprecated use smoothTime (in seconds) instead\n     * @category Properties\n     */\n    get dampingFactor() {\n        console.warn('.dampingFactor has been deprecated. use smoothTime (in seconds) instead.');\n        return 0;\n    }\n    /**\n     * backward compatible\n     * @deprecated use smoothTime (in seconds) instead\n     * @category Properties\n     */\n    set dampingFactor(_) {\n        console.warn('.dampingFactor has been deprecated. use smoothTime (in seconds) instead.');\n    }\n    /**\n     * backward compatible\n     * @deprecated use draggingSmoothTime (in seconds) instead\n     * @category Properties\n     */\n    get draggingDampingFactor() {\n        console.warn('.draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.');\n        return 0;\n    }\n    /**\n     * backward compatible\n     * @deprecated use draggingSmoothTime (in seconds) instead\n     * @category Properties\n     */\n    set draggingDampingFactor(_) {\n        console.warn('.draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.');\n    }\n    static createBoundingSphere(object3d, out = new THREE.Sphere()) {\n        const boundingSphere = out;\n        const center = boundingSphere.center;\n        _box3A.makeEmpty();\n        // find the center\n        object3d.traverseVisible((object) => {\n            if (!object.isMesh)\n                return;\n            _box3A.expandByObject(object);\n        });\n        _box3A.getCenter(center);\n        // find the radius\n        let maxRadiusSq = 0;\n        object3d.traverseVisible((object) => {\n            if (!object.isMesh)\n                return;\n            const mesh = object;\n            const geometry = mesh.geometry.clone();\n            geometry.applyMatrix4(mesh.matrixWorld);\n            const bufferGeometry = geometry;\n            const position = bufferGeometry.attributes.position;\n            for (let i = 0, l = position.count; i < l; i++) {\n                _v3A.fromBufferAttribute(position, i);\n                maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_v3A));\n            }\n        });\n        boundingSphere.radius = Math.sqrt(maxRadiusSq);\n        return boundingSphere;\n    }\n}\n\nexport { CameraControls as default };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport { Box3, MathUtils, Matrix4, Quaternion, Raycaster, Sphere, Spherical, Vector2, Vector3, Vector4 } from 'three';\nimport * as React from 'react';\nimport { forwardRef, useMemo, useEffect } from 'react';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport CameraControlsImpl from 'camera-controls';\n\nconst CameraControls = /* @__PURE__ */forwardRef((props, ref) => {\n  // useMemo is used here instead of useEffect, otherwise the useMemo below runs first and throws\n  useMemo(() => {\n    // to allow for tree shaking, we only import the subset of THREE that is used by camera-controls\n    // see https://github.com/yomotsu/camera-controls#important\n    const subsetOfTHREE = {\n      Box3,\n      MathUtils: {\n        clamp: MathUtils.clamp\n      },\n      Matrix4,\n      Quaternion,\n      Raycaster,\n      Sphere,\n      Spherical,\n      Vector2,\n      Vector3,\n      Vector4\n    };\n    CameraControlsImpl.install({\n      THREE: subsetOfTHREE\n    });\n    extend({\n      CameraControlsImpl\n    });\n  }, []);\n  const {\n    camera,\n    domElement,\n    makeDefault,\n    onStart,\n    onEnd,\n    onChange,\n    regress,\n    ...restProps\n  } = props;\n  const defaultCamera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const invalidate = useThree(state => state.invalidate);\n  const events = useThree(state => state.events);\n  const setEvents = useThree(state => state.setEvents);\n  const set = useThree(state => state.set);\n  const get = useThree(state => state.get);\n  const performance = useThree(state => state.performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = useMemo(() => new CameraControlsImpl(explCamera), [explCamera]);\n  useFrame((state, delta) => {\n    if (controls.enabled) controls.update(delta);\n  }, -1);\n  useEffect(() => {\n    controls.connect(explDomElement);\n    return () => void controls.disconnect();\n  }, [explDomElement, controls]);\n  useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n    const onStartCb = e => {\n      if (onStart) onStart(e);\n    };\n    const onEndCb = e => {\n      if (onEnd) onEnd(e);\n    };\n    controls.addEventListener('update', callback);\n    controls.addEventListener('controlstart', onStartCb);\n    controls.addEventListener('controlend', onEndCb);\n    controls.addEventListener('control', callback);\n    controls.addEventListener('transitionstart', callback);\n    controls.addEventListener('wake', callback);\n    return () => {\n      controls.removeEventListener('update', callback);\n      controls.removeEventListener('controlstart', onStartCb);\n      controls.removeEventListener('controlend', onEndCb);\n      controls.removeEventListener('control', callback);\n      controls.removeEventListener('transitionstart', callback);\n      controls.removeEventListener('wake', callback);\n    };\n  }, [controls, onStart, onEnd, invalidate, setEvents, regress, onChange]);\n  useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls: controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls\n  }, restProps));\n});\n\nexport { CameraControls };\n","\nimport { useEffect, useCallback, useRef, useState, Suspense, preventDefault } from 'react';\nimport { WebGLCanvas, Enso } from '../components';\nimport { Seo, Layout, GLHeader, GLInterior, MainMenu, GlUi } from '../components';\nimport './scss/_index.scss';\nimport { Canvas, useThree } from '@react-three/fiber';\nimport { OrbitControls, FirstPersonControls, TrackballControls, PresentationControls, CameraControls, FlyControls } from '@react-three/drei';\nimport * as THREE from 'three';\nimport { Slider, Label } from '@fluentui/react';\nimport { NextUIProvider, Spinner } from '@nextui-org/react';\nimport { useFrame } from '@react-three/fiber';\nimport Dispatcher from '../dispatcher';\n\nconst vec3 = (n1, n2, n3) => new THREE.Vector3(n1, n2, n3);\n\nconst IndexPage = () => {\n\n  const dispatch = useCallback(e => {\n    // console.log(`event received:`, e);\n    eventListeners[e]();\n  }, []);\n\n  const canvasRef = useRef(null);\n  const openLeftShoji = new Event('open-left-shoji');\n\n\n  const eventListeners = {};\n  const registerEventListener = useCallback((type, listener) => {\n    eventListeners[type] = listener;\n  }, []);\n\n\n  const initCanvas = useCallback(node => {\n    if (!node) return;\n    canvasRef.current = node;\n  }, []);\n\n  \n\n  // useEffect(() => {\n  //   document.addEventListener('open-left-shoji', () => {\n  //     console.log(`'open-left-shoji' dispatched`);\n  //     eventListeners['open-left-shoji']();\n  //   })\n  // },[]);\n\n  return (\n    <Canvas id='canvas' ref={initCanvas} >\n      {/* <ambientLight />  */}\n      {/* <Enso position={vec3(3.5,-0.95,0)} scale={vec3(.004125, .0015, 1)} /> */}\n      <directionalLight position={new THREE.Vector3(-40, 0, 10)} args={[0xffffff, 1.2]} castShadow={false} />\n      <directionalLight position={new THREE.Vector3(40, 0, 10)} args={[0xffffff, 1.2]} castShadow={false} />\n      {/* <Suspense fallback={<Enso position={vec3(3.5,-.7,0)} scale={vec3(1.5, 1.5, 1)} />} > */}\n      <Suspense fallback={<Enso position={vec3(-8, -0.95, 0)} scale={vec3(.0125, .006, 1)} rotation={[0,0,0]} />} >\n        <GLHeader />\n        <GLInterior registerEventListener={registerEventListener} dispatch={dispatch} />\n        <GlUi dispatch={dispatch}  registerEventListener={registerEventListener} />\n      </Suspense>\n      <CameraControls enabled={false} />\n      {/* <FirstPersonControls enabled={false} /> */}\n      {/* <FlyControls enabled={false} /> */}\n      {/* <PresentationControls enabled={false} /> */}\n    </Canvas>\n  )\n};\n\nexport default IndexPage;\n\n// export const Head = () => <Seo title='Home'/>;"],"names":["debounce","func","wait","immediate","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","apply","debounced","this","arguments","callNow","clear","clearTimeout","flush","module","exports","useMeasure","_temp","scroll","polyfill","offsetSize","ResizeObserver","window","Error","bounds","set","useState","left","top","width","height","bottom","right","x","y","state","useRef","element","scrollContainers","resizeObserver","lastBounds","scrollDebounce","resizeDebounce","resize","mounted","useEffect","current","forceRefresh","resizeChange","scrollChange","useMemo","callback","getBoundingClientRect","size","HTMLElement","offsetHeight","offsetWidth","Object","freeze","areBoundsEqual","removeListeners","forEach","removeEventListener","disconnect","addListeners","observe","scrollContainer","addEventListener","capture","passive","onScroll","enabled","onWindowResize","Boolean","cb","node","findScrollContainers","document","body","overflow","overflowX","overflowY","getComputedStyle","some","prop","push","parentElement","keys","a","b","every","key","__defProp","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","value","enumerable","configurable","writable","__spreadValues","call","traverseFiber","fiber","ascending","selector","child","return","match","sibling","wrapContext","_currentRenderer","get","_currentRenderer2","_","FiberContext","FiberProvider","render","Provider","_reactInternals","props","children","ReactCurrentOwner","ReactCurrentDispatcher","useFiber","root","id","maybeFiber","alternate","fiber2","memoizedState","next","useContextBridge","contextMap","_a","_b","Map","type","_context","has","readContext","useContextMap","Array","from","reduce","Prev","DOM_EVENTS","onClick","onContextMenu","onDoubleClick","onWheel","onPointerDown","onPointerUp","onPointerLeave","onPointerMove","onPointerCancel","onLostPointerCapture","createPointerEvents","store","handlePointer","c","priority","compute","event","previous","pointer","offsetX","offsetY","raycaster","setFromCamera","camera","connected","undefined","handlers","acc","update","_internal$lastEvent","events","internal","getState","lastEvent","connect","target","_events$handlers","entries","name","eventName","_events$handlers2","CanvasImpl","fallback","style","gl","eventSource","eventPrefix","shadows","linear","flat","legacy","orthographic","frameloop","dpr","performance","onPointerMissed","onCreated","forwardedRef","e","Bridge","containerRef","containerRect","canvasRef","divRef","handlePointerMissed","u","block","setBlock","error","setError","canvas","configure","i","setEvents","E","B","pointerEvents","ref","position","display","Canvas","MOUSE_BUTTON","ACTION","NONE","ROTATE","TRUCK","OFFSET","DOLLY","ZOOM","TOUCH_ROTATE","TOUCH_TRUCK","TOUCH_OFFSET","TOUCH_DOLLY","TOUCH_ZOOM","TOUCH_DOLLY_TRUCK","TOUCH_DOLLY_OFFSET","TOUCH_DOLLY_ROTATE","TOUCH_ZOOM_TRUCK","TOUCH_ZOOM_OFFSET","TOUCH_ZOOM_ROTATE","DOLLY_DIRECTION","isPerspectiveCamera","isOrthographicCamera","PI_2","Math","PI","PI_HALF","EPSILON","DEG2RAD","clamp","min","max","approxZero","number","abs","approxEquals","roundToStep","step","round","infinityToMaxNumber","isFinite","Number","MAX_VALUE","maxNumberToInfinity","Infinity","smoothDamp","currentVelocityRef","smoothTime","maxSpeed","deltaTime","omega","exp","change","originalTo","maxChange","temp","output","smoothDampVec3","out","targetX","targetY","targetZ","z","changeX","changeY","changeZ","originalToX","originalToY","originalToZ","magnitudeSq","magnitude","sqrt","tempX","tempY","tempZ","origMinusCurrentX","origMinusCurrentY","origMinusCurrentZ","extractClientCoordFromEvent","pointers","clientX","clientY","length","notSupportedInOrthographicCamera","message","console","warn","EventDispatcher","constructor","_listeners","listener","listeners","indexOf","hasEventListener","listenerArray","index","splice","removeAllEventListeners","isArray","dispatchEvent","array","slice","l","TOUCH_DOLLY_FACTOR","isBrowser","isMac","test","navigator","platform","isPointerEventsNotSupported","THREE","_ORIGIN","_AXIS_Y","_AXIS_Z","_v2","_v3A","_v3B","_v3C","_cameraDirection","_xColumn","_yColumn","_zColumn","_deltaTarget","_deltaOffset","_sphericalA","_sphericalB","_box3A","_box3B","_sphere","_quaternionA","_quaternionB","_rotationMatrix","_raycaster","CameraControls","static","libs","Vector3","Vector2","Spherical","Box3","Sphere","Quaternion","Matrix4","Raycaster","domElement","super","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","minDistance","maxDistance","infinityDolly","minZoom","maxZoom","draggingSmoothTime","azimuthRotateSpeed","polarRotateSpeed","dollySpeed","dollyDragInverted","truckSpeed","dollyToCursor","dragToOffset","verticalDragToForward","boundaryFriction","restThreshold","colliderMeshes","cancel","_enabled","_state","_viewport","_changedDolly","_changedZoom","_hasRested","_boundaryEnclosesCamera","_needsUpdate","_updatedLastTime","_elementRect","DOMRect","_isDragging","_dragNeedsUpdate","_activePointers","_lockedPointer","_interactiveArea","_isUserControllingRotate","_isUserControllingDolly","_isUserControllingTruck","_isUserControllingOffset","_isUserControllingZoom","_lastDollyDirection","_thetaVelocity","_phiVelocity","_radiusVelocity","_targetVelocity","_focalOffsetVelocity","_zoomVelocity","_truckInternal","deltaX","deltaY","truckX","pedestalY","_camera","offset","copy","sub","_target","fov","getEffectiveFOV","targetDistance","tan","zoom","setFocalOffset","_focalOffsetEnd","truck","forward","_rotateInternal","theta","phi","rotate","_dollyInternal","delta","dollyScale","pow","lastDistance","_sphericalEnd","radius","distance","clampedDistance","overflowedDistance","_dollyToNoClamp","dollyInFixed","_dollyControlCoord","sign","_zoomInternal","zoomScale","lastZoom","_zoom","zoomTo","_yAxisUpSpace","setFromUnitVectors","up","_yAxisUpSpaceInverse","clone","invert","_targetEnd","_focalOffset","_spherical","setFromVector3","applyQuaternion","_lastDistance","_zoomEnd","_lastZoom","_nearPlaneCorners","_updateNearPlaneCorners","_boundary","_cameraUp0","_target0","_position0","_zoom0","_focalOffset0","mouseButtons","middle","wheel","touches","one","two","three","dragStartPosition","lastDragPosition","dollyStart","_domElement","elRect","mouseButton","pointerType","buttons","zombiePointer","_findPointerByMouseButton","_disposePointer","pointerId","ownerDocument","startDragging","onMouseDown","onMouseMove","onMouseUp","cancelable","preventDefault","_findPointerById","movementX","movementY","dragging","endDragging","lastScrollTimeStamp","onMouseWheel","_getClientRect","deltaYFactor","deltaMode","PointerEvent","MouseEvent","dx","dy","lockedPointer","pointerLockElement","dollyX","dollyY","dollyDirection","dollyDelta","lockPointer","requestPointerLock","onPointerLockChange","onPointerLockError","unlockPointer","exitPointerLock","_addAllEventListeners","touchAction","userSelect","webkitUserSelect","_removeAllEventListeners","updateCameraUp","updateProjectionMatrix","active","currentAction","azimuthAngle","polarAngle","boundaryEnclosesCamera","interactiveArea","enableTransition","rotateTo","rotateAzimuthTo","rotatePolarTo","makeSafe","resolveImmediately","_createOnRestPromise","dolly","dollyTo","lastRadius","maxDistanceByCollisionTest","_collisionTest","isCollided","Promise","resolve","add","_getCameraDirection","multiplyScalar","zoomStep","pan","updateMatrix","setFromMatrixColumn","matrix","to","moveTo","crossVectors","elevate","_encloseToBoundary","lookInDirectionOf","normalize","setPosition","fitToBox","box3OrObject","cover","paddingLeft","paddingRight","paddingBottom","paddingTop","promises","aabb","isBox3","setFromObject","isEmpty","normal","setFromSpherical","rotation","viewFromPolar","multiply","setFromAxisAngle","bb","makeEmpty","expandByPoint","setX","setY","setZ","premultiply","bbSize","getSize","center","getCenter","getDistanceToFitBox","all","fitToSphere","sphereOrMesh","boundingSphere","createBoundingSphere","distanceToFit","getDistanceToFitSphere","diameter","setLookAt","positionX","positionY","positionZ","normalizeRotations","lerpLookAt","positionAX","positionAY","positionAZ","targetAX","targetAY","targetAZ","positionBX","positionBY","positionBZ","targetBX","targetBY","targetBZ","t","targetA","positionA","targetB","positionB","lerp","deltaTheta","deltaPhi","deltaRadius","setTarget","pos","getPosition","promise","setOrbitPoint","updateMatrixWorld","matrixWorldInverse","distanceTo","cameraToPoint","setBoundary","box3","clampPoint","setViewport","viewportOrX","Vector4","depth","boundingRectAspect","aspect","vFOV","hFOV","atan","sin","getTarget","receiveEndValue","isVector3","getSpherical","getFocalOffset","reset","saveState","applyCameraUp","cameraDirection","subVectors","side","deltaTarget","deltaOffset","deltaZoom","dollyControlAmount","planeX","cross","lengthSq","planeY","worldToScreen","lerpRatio","cursor","newTargetEnd","isMin","isMax","dollyAmount","targetEndDiff","worldCursorPosition","near","far","unproject","quaternion","dot","prevPlaneConstant","newPlaneConstant","pullBack","lookAt","updated","toJSON","JSON","stringify","toArray","focalOffset","target0","position0","zoom0","focalOffset0","fromJSON","json","parse","fromArray","setAttribute","removeAttribute","dispose","_getTargetDirection","divideScalar","negate","find","activePointer","friction","offsetLength2","newTarget","deltaClampedTarget","deltaClampedTargetLength2","offsetFactor","heightHalf","widthHalf","zoomInv","rayDirection","nearPlaneCorner","applyMatrix4","origin","addVectors","intersects","intersectObjects","rect","w","onResolve","dampingFactor","draggingDampingFactor","object3d","traverseVisible","object","isMesh","expandByObject","maxRadiusSq","mesh","geometry","matrixWorld","attributes","count","fromBufferAttribute","distanceToSquared","forwardRef","subsetOfTHREE","MathUtils","install","CameraControlsImpl","makeDefault","onStart","onEnd","onChange","regress","restProps","defaultCamera","invalidate","explCamera","explDomElement","controls","onStartCb","onEndCb","old","vec3","n1","n2","n3","IndexPage","dispatch","useCallback","eventListeners","Event","registerEventListener","initCanvas","_jsxs","_jsx","castShadow","Suspense","Enso","scale","GLHeader","GLInterior","GlUi"],"sourceRoot":""}